{"version":3,"sources":["screens/Home.jsx","components/Message.jsx","components/Loader.jsx","constants/userConstants.js","actions/userActions.js","components/FormContainer.jsx","screens/LoginScreen.jsx","screens/About.jsx","constants/projectsContstants.js","actions/projectActions.js","screens/Projects.jsx","screens/AdminScreen.jsx","screens/ProjectEditScreen.jsx","assets/Images/WulfBrandingLogoLightSmall.png","components/Navbar.jsx","assets/data/socials.js","components/Footer.jsx","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/projectsReducer.js","index.js"],"names":["Home","Container","style","padding","className","onInit","typewriter","typeString","pauseFor","deleteAll","start","Row","Col","Message","variant","children","Alert","defaultProps","Loader","Spinner","animation","role","width","height","margin","display","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","logout","dispatch","localStorage","removeItem","type","FormContainer","textAlign","xs","md","LoginScreen","location","navigate","useNavigate","useState","email","setEmail","password","setPassword","useDispatch","userLogin","useSelector","state","loading","error","userInfo","useEffect","color","Form","onSubmit","e","preventDefault","a","config","headers","axios","post","data","payload","setItem","JSON","stringify","response","message","login","Group","controlId","FloatingLabel","label","Control","value","placeholder","onChange","target","Button","About","fluid","src","alt","fontSize","PROJECT_LIST_REQUEST","PROJECT_LIST_SUCCESS","PROJECT_LIST_FAIL","PROJECT_DETAILS_REQUEST","PROJECT_DETAILS_SUCCESS","PROJECT_DETAILS_FAIL","PROJECT_DELETE_REQUEST","PROJECT_DELETE_SUCCESS","PROJECT_DELETE_FAIL","PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_CREATE_RESET","PROJECT_UPDATE_REQUEST","PROJECT_UPDATE_SUCCESS","PROJECT_UPDATE_FAIL","PROJECT_UPDATE_RESET","listProjects","pageNumber","method","url","deleteProject","id","getState","Authorization","token","delete","Projects","match","page","useParams","getProjects","projects","projectDelete","loadingDelete","errorDelete","successDelete","success","console","log","map","project","name","lg","Image","photo","Nav","fill","Item","Link","href","githubUrl","liveProjectURL","as","to","_id","onClick","window","confirm","textIndent","description","languages","language","indx","AdminScreen","loadingProject","errorProject","projectCreate","loadingCreate","errorCreate","successCreate","createdProject","createProjectHandler","Table","striped","bordered","responsive","hover","lang","ProjectEditScreen","setName","setPhoto","setGithubUrl","setLiveProjectURL","setLanguages","setDescription","uploading","setUploading","projectDetails","projectUpdate","loadingUpdate","errorUpdate","successUpdate","get","listProjectDetails","uploadFileHandler","file","files","formData","FormData","append","put","updateProject","split","Text","muted","length","Header","logo","socials","social","social_link","social_fa_icon","Footer","dateObj","Date","newdate","getUTCMonth","getUTCFullYear","sticky","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","reducer","combineReducers","action","pages","count","initialState","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0c283b8.chunk.js","sourcesContent":["import React from \"react\";\r\n//importing typewriter-effect\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container style={{ padding: \"5%\" }}>\r\n      <div className=\"typeWriterContainer\">\r\n        <div className=\"typeWriterParent\">\r\n          <p className=\"typeWriterIntro\">Hi, I am Austin Howard,</p>\r\n          <Typewriter\r\n            onInit={(typewriter) => {\r\n              typewriter\r\n                .typeString(\"a Father.\")\r\n                .pauseFor(1000)\r\n                .deleteAll()\r\n\r\n                .typeString(\"a Husband.\")\r\n                .pauseFor(1000)\r\n                .deleteAll()\r\n\r\n                .typeString(\"a Singer.\")\r\n                .pauseFor(1000)\r\n                .deleteAll()\r\n\r\n                .typeString(\"a Visionary.\")\r\n                .pauseFor(1000)\r\n                .deleteAll()\r\n\r\n                .typeString(\"a Software Developer!\")\r\n\r\n                .start();\r\n            }}\r\n          />\r\n        </div>\r\n        <Row>\r\n          <Col></Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/auth/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container style={{ padding: \"5%\", textAlign: \"center\" }}>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, FloatingLabel, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/userActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst LoginScreen = ({ location }) => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <Container style={{ padding: \"10%\" }}>\r\n      <FormContainer>\r\n        <h1 style={{ color: \"white\" }}>Admin Sign-in</h1>\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"email\">\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Email address\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                placeholder=\"Email address\"\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FloatingLabel>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <FloatingLabel\r\n              controlId=\"floatinInput\"\r\n              label=\"Password\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FloatingLabel>\r\n          </Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"dark\"\r\n            className=\"styled-button\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            Sign-In\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Container fluid className=\"aboutMe\">\r\n      <img\r\n        src=\"/images/headshot.jpg\"\r\n        alt=\"profile pic\"\r\n      />\r\n      <div>\r\n        <p className=\"storyText\">\r\n          <span\r\n            className=\"navbar-signature gradient-text\"\r\n            style={{ fontSize: \"2.25rem\" }}\r\n          >\r\n            Austin Howard\r\n          </span>{\" \"}\r\n          is a proactive junior software developer with a passion for code and\r\n          solid background of superior performance in foundational roles. He is\r\n          a diligent, self-directed learner with more than 4 years of personal\r\n          study, as well as instruction at professional educational\r\n          institutions. Austin is proficient with several full-stack languages,\r\n          frameworks, and libraries. He is also experienced in the day-to-day\r\n          operations of businesses and the importance of each role within an\r\n          organization.\r\n        </p>\r\n        <p className=\"storyText\">\r\n          From Early on in Austin's youth, technology seemed to come easy to\r\n          him. Much like most people who pursue tech as a field. Austin had a\r\n          constant yearning to consume technology. One of Austin's very first\r\n          memories for technology came early about the first grade. The class\r\n          was having a show-and-tell and a classmate had brought a computer game\r\n          for the class to play on the teachers computer. The teacher had\r\n          difficulty with the installation of the game, all until Austin gave it\r\n          a shot, he was able to install the game and the class was able to\r\n          enjoy the content. However it didnt dawn on Austin just what something\r\n          like this meant until later in life.\r\n        </p>\r\n        <p className=\"storyText\">\r\n          Growing up in Southeast Appalachia, public education did what public\r\n          education does best. It trained Austin to work long monotonous hours\r\n          with the intent to either work in a factory or work in a coal mine.\r\n          from the very beginning Austin knew that he would not be taking this\r\n          kind of path in life. However it wasnt until he was in 8th grade that\r\n          he knew what he wanted to do exactly with his life.\r\n        </p>\r\n        <p className=\"storyText\">\r\n          8th Grade brought Austin an amazing opportunity with schooling, it was\r\n          then on the very last few weeks of 8th grade that the high school was\r\n          partnering with the local community college to offer a course to\r\n          grades 9-12, the course was known as Project-Lead-The-Way or PLTW, in\r\n          its design it was to offer students a glance into the wonderful world\r\n          of engineering by exposing prospective students to different fields of\r\n          study. Such areas included CAD, Architecture and Electrical\r\n          engineering. Austin fell in love with Electrical Engineering. Finally\r\n          the world seemed a lot clearer. Austin began to devour these courses,\r\n          so much so that his only reason for wanting to go to school was to\r\n          atend these courses. From there it seemed like the future was known\r\n          and Austin had a motto for his life. \"To build a better future, we\r\n          must create today.\" However life had its other plans.\r\n        </p>\r\n        <p className=\"storyText\">\r\n          It was in high school that Austin met the love of his life, His wife.\r\n          Many things would change in that time, and ultimately it would lead to\r\n          the point where it was unfeasible to pursue an Electrical Engineering\r\n          Degree. In fact, it would seem that Austin would fall back into the\r\n          mold that so many did, as he entered General non-skilled labor\r\n          positions. Though this would turn to be a blessing in disguise. One\r\n          fate-filled day while working an over-night position at Wal-Mart.\r\n          Austin overheard a couple coworkers talking about playing Dungeons and\r\n          Dragons. The idea of D&D intrigued Austin. After all, as an avid gamer\r\n          RPG's where among the most favored. it was here with this group of\r\n          rag-tag co-workers looking for a release from the work week. That\r\n          Austin would discover the next step in his life.\r\n        </p>\r\n        <p className=\"storyText\">\r\n          As it would stand, running up to Dragons is likely the quickest way to\r\n          die in D&D. It became a running joke of how long Austin's characters would\r\n          last but it was in this flurry of mistakes that Austin noticed\r\n          something. character creation, is a long tedious process to do on\r\n          paper... An idea was hatched to create a character creator program\r\n          that would speed up the process. From that idea came the realization\r\n          that Software Development would be an amazing field to pursue. The\r\n          concept was nearly the same as what had been thought earlier in\r\n          Austins life \"To build a better future, we must create today.\" The\r\n          process of automation through software. Make life better by automating\r\n          away the tediousness of life's problems.\r\n        </p>\r\n        <p className=\"storyText\">\r\n          From there Austin began to do a lot of research and self-teaching for\r\n          Software Development starting with the book, \"Python For The Absolute\r\n          Begginer\" and coming to a head of where Austin is now. With a combined\r\n          knowledge from professional institutions, and self-learning. Austin\r\n          wants to change the world through code. Automating processes and parts\r\n          of life to make living easier.\r\n        </p>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export const PROJECT_LIST_REQUEST = \"PROJECT_LIST_REQUEST\";\r\nexport const PROJECT_LIST_SUCCESS = \"PROJECT_LIST_SUCCESS\";\r\nexport const PROJECT_LIST_FAIL = \"PROJECT_LIST_FAIL\";\r\n\r\nexport const PROJECT_DETAILS_REQUEST = \"PROJECT_DETAILS_REQUEST\";\r\nexport const PROJECT_DETAILS_SUCCESS = \"PROJECT_DETAILS_SUCCESS\";\r\nexport const PROJECT_DETAILS_FAIL = \"PROJECT_DETAILS_FAIL\";\r\n\r\nexport const PROJECT_DELETE_REQUEST = \"PROJECT_DELETE_REQUEST\";\r\nexport const PROJECT_DELETE_SUCCESS = \"PROJECT_DELETE_SUCCESS\";\r\nexport const PROJECT_DELETE_FAIL = \"PROJECT_DELETE_FAIL\";\r\n\r\nexport const PROJECT_CREATE_REQUEST = \"PROJECT_CREATE_REQUEST\";\r\nexport const PROJECT_CREATE_SUCCESS = \"PROJECT_CREATE_SUCCESS\";\r\nexport const PROJECT_CREATE_FAIL = \"PROJECT_CREATE_FAIL\";\r\nexport const PROJECT_CREATE_RESET = \"PROJECT_CREATE_RESET\";\r\n\r\nexport const PROJECT_UPDATE_REQUEST = \"PROJECT_UPDATE_REQUEST\";\r\nexport const PROJECT_UPDATE_SUCCESS = \"PROJECT_UPDATE_SUCCESS\";\r\nexport const PROJECT_UPDATE_FAIL = \"PROJECT_UPDATE_FAIL\";\r\nexport const PROJECT_UPDATE_RESET = \"PROJECT_UPDATE_RESET\";\r\n","import {\r\n  PROJECT_CREATE_FAIL,\r\n  PROJECT_CREATE_REQUEST,\r\n  PROJECT_CREATE_SUCCESS,\r\n  PROJECT_DELETE_FAIL,\r\n  PROJECT_DELETE_REQUEST,\r\n  PROJECT_DELETE_SUCCESS,\r\n  PROJECT_DETAILS_FAIL,\r\n  PROJECT_DETAILS_REQUEST,\r\n  PROJECT_DETAILS_SUCCESS,\r\n  PROJECT_LIST_FAIL,\r\n  PROJECT_LIST_REQUEST,\r\n  PROJECT_LIST_SUCCESS,\r\n  PROJECT_UPDATE_FAIL,\r\n  PROJECT_UPDATE_REQUEST,\r\n  PROJECT_UPDATE_SUCCESS,\r\n} from \"../constants/projectsContstants\";\r\nimport { logout } from \"./userActions\";\r\nimport axios from \"axios\";\r\n\r\nexport const listProjects = (pageNumber) => async (dispatch) => {\r\n  try {\r\n    // Dispatch request type\r\n    dispatch({ type: PROJECT_LIST_REQUEST });\r\n    // axios call\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `/api/projects?page=${pageNumber}`,\r\n    });\r\n    // on success dispatch request success\r\n    dispatch({\r\n      type: PROJECT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProjectDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PROJECT_DETAILS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/projects/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PROJECT_DETAILS_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROJECT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/projects/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PROJECT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PROJECT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProject = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/projects`,\r\n      {\r\n        name: \"blank project\",\r\n        description: \"This is a blank project, pardon my dust as i clean up\",\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PROJECT_CREATE_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PROJECT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProject = (project) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/projects/${project._id}`,\r\n      project,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PROJECT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PROJECT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PROJECT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useParams } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\n// actions\r\nimport { listProjects, deleteProject } from \"../actions/projectActions\";\r\nimport { Col, Container, Image, Row, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Projects = ({ match }) => {\r\n  const page = useParams || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, projects } = useSelector(\r\n    (state) => state.getProjects\r\n  );\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = useSelector((state) => state.projectDelete);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProject(id));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    console.log(projects);\r\n    dispatch(listProjects(page));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, page, successDelete]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Container>\r\n          {loadingDelete && <Loader />}\r\n          {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n          {projects.map((project) => {\r\n            return (\r\n              <Container fluid key={project._id} className=\"project-container\">\r\n                <Row>\r\n                  <Row className=\"project-container-title\">\r\n                    <Col>{project.name}</Col>\r\n                  </Row>\r\n                  <Col lg={6} className=\"project-container-left\">\r\n                    <Image\r\n                      fluid\r\n                      className=\"project-container-img\"\r\n                      src={project.photo}\r\n                      alt={`${project.name} image`}\r\n                    />\r\n                    <Nav\r\n                      fill\r\n                      className=\"project-links\"\r\n                      style={{ padding: \"5%\" }}\r\n                    >\r\n                      <Nav.Item>\r\n                        <Nav.Link href={project.githubUrl}>\r\n                          <i className=\"fab fa-github\" /> Github Link\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                      <Nav.Item>\r\n                        <Nav.Link href={project.liveProjectURL}>\r\n                          <i className=\"fas fa-external-link-alt\" /> Live\r\n                          Project\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                      {userInfo && (\r\n                        <>\r\n                          <Nav.Item>\r\n                            <Nav.Link\r\n                              as={Link}\r\n                              to={`/admin/projectedit/${project._id}`}\r\n                              className=\"project-link-edit\"\r\n                            >\r\n                              <i className=\"fas fa-edit\" /> Edit Project\r\n                            </Nav.Link>\r\n                          </Nav.Item>\r\n                          <Nav.Item onClick={() => deleteHandler(project._id)}>\r\n                            <Nav.Link href=\"\" className=\"project-link-delete\">\r\n                              <i className=\"fas fa-trash-alt\" /> Delete\r\n                            </Nav.Link>\r\n                          </Nav.Item>\r\n                        </>\r\n                      )}\r\n                    </Nav>\r\n                  </Col>\r\n                  <Col className=\"project-container-right\">\r\n                    <Container>\r\n                      <h4\r\n                        style={{\r\n                          color: \"white\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Description\r\n                      </h4>\r\n                      <p style={{ textIndent: \"40px\", color: \"white\" }}>\r\n                        {project.description}\r\n                      </p>\r\n                    </Container>\r\n                    <Container fluid>\r\n                      <h4\r\n                        style={{\r\n                          color: \"white\",\r\n                          textAlign: \"center\",\r\n                        }}\r\n                      >\r\n                        Languages/Stack Used\r\n                      </h4>\r\n                      <Container fluid style={{ textAlign: \"center\" }}>\r\n                        {project.languages.map((language, indx) => {\r\n                          return (\r\n                            <p\r\n                              style={{\r\n                                display: \"inline\",\r\n                                color: \"white\",\r\n                                padding: \"2%\",\r\n                              }}\r\n                              key={indx}\r\n                            >\r\n                              {language}{\" \"}\r\n                            </p>\r\n                          );\r\n                        })}\r\n                      </Container>\r\n                    </Container>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            );\r\n          })}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useEffect } from \"react\";\r\nimport { Table, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  createProject,\r\n  deleteProject,\r\n  listProjects,\r\n} from \"../actions/projectActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { PROJECT_CREATE_RESET } from \"../constants/projectsContstants\";\r\n\r\nconst AdminScreen = () => {\r\n  const page = useParams || 1;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading: loadingProject,\r\n    error: errorProject,\r\n    projects,\r\n  } = useSelector((state) => state.getProjects);\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = useSelector((state) => state.projectDelete);\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    project: createdProject,\r\n  } = useSelector((state) => state.projectCreate);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PROJECT_CREATE_RESET });\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      navigate(`/admin/projectedit/${createdProject._id}`);\r\n    } else {\r\n      dispatch(listProjects(page));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProject,\r\n    navigate,\r\n    page,\r\n  ]);\r\n\r\n  const createProjectHandler = () => {\r\n    dispatch(createProject());\r\n  };\r\n\r\n  const deleteProjHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProject(id));\r\n    }\r\n  };\r\n  const deleteCertHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      // dispatch(deleteProject(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"admin-screen\">\r\n      <Container fluid>\r\n        <Row className=\"align-items-center\">\r\n          <Col>\r\n            <h1 style={{ color: \"white\" }}>Projects</h1>\r\n          </Col>\r\n          <Col style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              className=\"my-3\"\r\n              variant=\"success\"\r\n              onClick={createProjectHandler}\r\n            >\r\n              <i className=\"fas fa-plus\"></i> Create Project\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        {loadingDelete && <Loader />}\r\n        {errorProject && <Message variant=\"danger\">{errorProject}</Message>}\r\n        {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n        {loadingCreate && <Loader />}\r\n        {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n        {loadingProject ? (\r\n          <Loader />\r\n        ) : (\r\n          <Table\r\n            striped\r\n            bordered\r\n            responsive\r\n            hover\r\n            variant=\"dark\"\r\n            className=\"table-sm\"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>GITHUB LINK</th>\r\n                <th>LANGUAGES/STACK</th>\r\n                <th>LIVE PROJECT URL</th>\r\n                <th>IMAGE PATH</th>\r\n                <th>Edit / Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projects.map((project) => {\r\n                return (\r\n                  <tr key={project._id}>\r\n                    <td>{project._id}</td>\r\n                    <td>{project.name}</td>\r\n                    <td>{project.githubUrl}</td>\r\n                    <td>\r\n                      {project.languages.map((lang, indx) => {\r\n                        return (\r\n                          <p\r\n                            style={{\r\n                              display: \"inline\",\r\n                              color: \"white\",\r\n                              padding: \"2%\",\r\n                            }}\r\n                            key={indx}\r\n                          >\r\n                            {lang}{\" \"}\r\n                          </p>\r\n                        );\r\n                      })}\r\n                    </td>\r\n                    <td>{project.liveProjectURL}</td>\r\n                    <td>{project.photo}</td>\r\n                    <td>\r\n                      <Link to={`/admin/projectedit/${project._id}`}>\r\n                        <Button variant=\"light\" className=\"btn-sm\">\r\n                          <i className=\"fas fa-edit\"></i>\r\n                        </Button>\r\n                      </Link>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        className=\"btn-sm\"\r\n                        onClick={() => deleteProjHandler(project._id)}\r\n                      >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Container>\r\n      <Container fluid>\r\n        <Row className=\"align-items-center\">\r\n          <Col>\r\n            <h1 style={{ color: \"white\" }}>Certificates</h1>\r\n          </Col>\r\n          <Col style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              className=\"my-3\"\r\n              variant=\"success\"\r\n              onClick={createProjectHandler}\r\n            >\r\n              <i className=\"fas fa-plus\"></i> Create Certificate\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Table\r\n          striped\r\n          bordered\r\n          responsive\r\n          hover\r\n          variant=\"dark\"\r\n          className=\"table-sm\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>ISSUING AUTH</th>\r\n              <th>IMAGE URL</th>\r\n              <th>DATE OF COMPLETION</th>\r\n              <th>Edit / Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {projects.map((project) => {\r\n              return (\r\n                <tr key={project._id}>\r\n                  <td>{project._id}</td>\r\n                  <td>{project.name}</td>\r\n                  <td>{project.githubUrl}</td>\r\n                  <td>{project.languages}</td>\r\n                  <td>{project.liveProjectURL}</td>\r\n                  <td>\r\n                    <Link to={`/admin/project/${project._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </Link>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteCertHandler(project._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Form, Button, FloatingLabel, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { PROJECT_UPDATE_RESET } from \"../constants/projectsContstants\";\r\nimport { listProjectDetails, updateProject } from \"../actions/projectActions\";\r\nimport axios from \"axios\";\r\n// import FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst ProjectEditScreen = ({ match }) => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [githubUrl, setGithubUrl] = useState(\"\");\r\n  const [liveProjectURL, setLiveProjectURL] = useState(\"\");\r\n  const [languages, setLanguages] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, error, project } = useSelector(\r\n    (state) => state.projectDetails\r\n  );\r\n\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = useSelector((state) => state.projectUpdate);\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PROJECT_UPDATE_RESET });\r\n      navigate(\"/projects\");\r\n    } else {\r\n      if (!project.name || project._id !== id) {\r\n        dispatch(listProjectDetails(id));\r\n      } else {\r\n        setName(project.name);\r\n        setPhoto(project.photo);\r\n        setGithubUrl(project.githubUrl);\r\n        setLiveProjectURL(project.liveProjectURL);\r\n        setLanguages(project.languages);\r\n        setDescription(project.description);\r\n      }\r\n    }\r\n  }, [navigate, id, successUpdate, dispatch, loading, project]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    // files, is an array, since we have the ability to upload multiple\r\n    // files we only want the first file.\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    //Triggers the Loader component\r\n    setUploading(true);\r\n\r\n    //This makes the request to the backend\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          // Has to have the multipart/form-data!\r\n          // Also only Admins can upload a file, need token\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/uploads\", formData, config);\r\n\r\n      //Once the post request is finished, setImage to data, setUploading to false, to remove Loader\r\n      //Component\r\n      setPhoto(data.data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProject({\r\n        _id: id,\r\n        name,\r\n        photo,\r\n        githubUrl,\r\n        liveProjectURL,\r\n        languages,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <Container className=\"project-edit-container\">\r\n      <Container>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <FormContainer>\r\n            <h1 style={{ color: \"white\" }}>Edit Project</h1>\r\n            <Container style={{ padding: \"5%\" }}>\r\n              <h4 style={{ color: \"white\" }}>Project Image</h4>\r\n              <Image src={`/${photo}`} fluid />\r\n            </Container>\r\n            <Form onSubmit={submitHandler} style={{ color: \"black\" }}>\r\n              <Form.Group controlId=\"name\">\r\n                <FloatingLabel\r\n                  controlId=\"floatingInput\"\r\n                  label=\"Project name\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Project Name\"\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </FloatingLabel>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"githubUrl\">\r\n                <FloatingLabel\r\n                  controlId=\"floatingInput\"\r\n                  label=\"Github URL\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={githubUrl}\r\n                    placeholder=\"Github URL\"\r\n                    onChange={(e) => setGithubUrl(e.target.value)}\r\n                  ></Form.Control>\r\n                </FloatingLabel>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"liveProjectURL\">\r\n                <FloatingLabel\r\n                  controlId=\"floatingInput\"\r\n                  label=\"Live Project Location\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={liveProjectURL}\r\n                    placeholder=\"Live Project Location\"\r\n                    onChange={(e) => setLiveProjectURL(e.target.value)}\r\n                  ></Form.Control>\r\n                </FloatingLabel>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"image\" className=\"mb-3\">\r\n                <Form.Control type=\"text\" value={photo} />\r\n                <Form.Control type=\"file\" onChange={uploadFileHandler} />\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"languages\">\r\n                <FloatingLabel\r\n                  controlId=\"floatingInput\"\r\n                  label=\"What Langauges/Stack did you use?\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"What Langauges/Stack did you use?\"\r\n                    value={languages}\r\n                    onChange={(e) => setLanguages(e.target.value.split(\",\"))}\r\n                  ></Form.Control>\r\n                  <Form.Text id=\"languagesHelpBlock\" muted>\r\n                    Enter the values as comma (,) seperated values\r\n                  </Form.Text>\r\n                </FloatingLabel>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"description\">\r\n                <FloatingLabel\r\n                  controlId=\"floatingInput\"\r\n                  label=\"Project Description\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    value={description}\r\n                    placeholder=\"Project Name\"\r\n                    style={{ height: \"100px\" }}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  ></Form.Control>\r\n                  <Form.Text id=\"descriptionHelpBlock\" muted>\r\n                    Please enter a good description of the project, it must be\r\n                    less than 500 characters. {500 - description.length}/500\r\n                    characters remaining\r\n                  </Form.Text>\r\n                </FloatingLabel>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"dark\" style={{ width: \"100%\" }}>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n        )}\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProjectEditScreen;\r\n","export default __webpack_public_path__ + \"static/media/WulfBrandingLogoLightSmall.95c9816e.png\";","import React from \"react\";\r\nimport { Container, Image, Nav } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport logo from \"../assets/Images/WulfBrandingLogoLightSmall.png\";\r\n\r\nconst Header = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Container fluid className=\"navbar-container\">\r\n        <Link to=\"/\">\r\n          <Image className=\"navbar-brand-logo\" src={logo} alt=\"logo\" />\r\n        </Link>\r\n        <div style={{ textAlign: \"end\" }}>\r\n          <h2>Wulf Developments</h2>\r\n          <h4>Software Developer</h4>\r\n          <h6\r\n            onClick={\r\n              userInfo\r\n                ? logoutHandler\r\n                : () => {\r\n                    navigate(\"/login\");\r\n                  }\r\n            }\r\n            className=\"navbar-signature gradient-text\"\r\n          >\r\n            Austin Howard\r\n          </h6>\r\n        </div>\r\n      </Container>\r\n      <Nav fill className=\"nav-links\">\r\n        <Nav.Item>\r\n          <Nav.Link as={Link} to=\"/about\">\r\n            About\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/blog\">Blog</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link as={Link} to=\"/projects\">\r\n            Projects\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        {userInfo && (\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/admin/adminscreen\">\r\n              Admin Screen\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        )}\r\n      </Nav>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const socials = [\r\n  {\r\n    social: \"Facebook\",\r\n    social_link: \"https://www.facebook.com/austin.howard.31/\",\r\n    social_fa_icon: \"fab fa-facebook-square\",\r\n  },\r\n  {\r\n    social: \"Github\",\r\n    social_link: \"https://github.com/CNFishead\",\r\n    social_fa_icon: \"fab fa-github-square\",\r\n  },\r\n  {\r\n    social: \"LinkedIn\",\r\n    social_link: \"https://www.linkedin.com/in/cnfishead1993/\",\r\n    social_fa_icon: \"fab fa-linkedin\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { socials } from \"../assets/data/socials\";\r\n\r\nconst Footer = () => {\r\n  let dateObj = new Date();\r\n  let month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n  let year = dateObj.getUTCFullYear();\r\n\r\n  let newdate = month + \"/\" + year;\r\n  return (\r\n    <footer style={{ sticky: \"bottom\" }}>\r\n      <Container className=\"social-links\">\r\n        {socials.map((social, indx) => {\r\n          return (\r\n            <div key={indx} className=\"social-link\">\r\n              <a href={social.social_link}>\r\n                <i className={`${social.social_fa_icon} social-link-icon`} />\r\n              </a>\r\n            </div>\r\n          );\r\n        })}\r\n        <Row>\r\n          <Col style={{ color: \"#f3ec78\" }}>\r\n            <p>Connect with me!</p>\r\n            <p>Wulf Developments {newdate}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\n// Screen imports\r\nimport Home from \"./screens/Home\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport About from \"./screens/About\";\r\nimport Projects from \"./screens/Projects\";\r\nimport AdminScreen from \"./screens/AdminScreen\";\r\nimport ProjectEditScreen from \"./screens/ProjectEditScreen\";\r\n\r\n// Components\r\nimport Header from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\n// css styles\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/admin/projectedit/:id\" element={<ProjectEditScreen />} />\r\n        <Route path=\"/admin/adminscreen\" element={<AdminScreen />} />\r\n        <Route path=\"/login\" element={<LoginScreen />} />\r\n        <Route path=\"/projects\" element={<Projects />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route path=\"/\" element={<Home />} />\r\n      </Routes>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// import reducers\r\nimport { userLoginReducer } from \"./reducers/userReducer\";\r\nimport {\r\n  projectListReducer,\r\n  projectCreateReducer,\r\n  projectDeleteReducer,\r\n  projectUpdateReducer,\r\n  projectDetailsReducer,\r\n} from \"./reducers/projectsReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  getProjects: projectListReducer,\r\n  projectUpdate: projectUpdateReducer,\r\n  projectDelete: projectDeleteReducer,\r\n  projectCreate: projectCreateReducer,\r\n  projectDetails: projectDetailsReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PROJECT_CREATE_FAIL,\r\n  PROJECT_CREATE_REQUEST,\r\n  PROJECT_CREATE_RESET,\r\n  PROJECT_CREATE_SUCCESS,\r\n  PROJECT_DELETE_FAIL,\r\n  PROJECT_DELETE_REQUEST,\r\n  PROJECT_DELETE_SUCCESS,\r\n  PROJECT_DETAILS_FAIL,\r\n  PROJECT_DETAILS_REQUEST,\r\n  PROJECT_DETAILS_SUCCESS,\r\n  PROJECT_LIST_FAIL,\r\n  PROJECT_LIST_REQUEST,\r\n  PROJECT_LIST_SUCCESS,\r\n  PROJECT_UPDATE_FAIL,\r\n  PROJECT_UPDATE_REQUEST,\r\n  PROJECT_UPDATE_RESET,\r\n  PROJECT_UPDATE_SUCCESS,\r\n} from \"../constants/projectsContstants\";\r\n\r\nexport const projectListReducer = (state = { projects: [] }, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_LIST_REQUEST:\r\n      return { loading: true, projects: [] };\r\n    case PROJECT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        projects: action.payload.data,\r\n        pages: action.payload.pages,\r\n        count: action.payload.count,\r\n        page: action.payload.page,\r\n      };\r\n    case PROJECT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const projectDetailsReducer = (state = { project: {} }, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PROJECT_DETAILS_SUCCESS:\r\n      return { loading: false, project: action.payload };\r\n    case PROJECT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PROJECT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PROJECT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PROJECT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, project: action.payload };\r\n    case PROJECT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PROJECT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectUpdateReducer = (state = { project: {} }, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PROJECT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, project: action.payload };\r\n    case PROJECT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PROJECT_UPDATE_RESET:\r\n      return { project: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}