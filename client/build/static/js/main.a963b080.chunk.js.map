{"version":3,"sources":["components/Meta.jsx","utils/formatDate.js","screens/Blog/BlogItem.jsx","constants/blogConstants.js","constants/alertConstants.js","actions/alert.js","constants/projectsContstants.js","actions/Project/listProjects.js","screens/ProjectItem.jsx","screens/Home.jsx","actions/Blog/getFeaturedArticles.js","components/Loader.jsx","constants/userConstants.js","components/FormContainer.jsx","screens/LoginScreen.jsx","actions/Auth/login.js","screens/About.jsx","components/Paginate.jsx","actions/Auth/logout.js","actions/Project/deleteProject.js","screens/Projects.jsx","constants/certConstants.js","actions/Certificate/listCertificates.js","screens/Certificate/Certificates.jsx","actions/Blog/listBlogs.js","screens/Blog/Blogs.jsx","screens/Reset.jsx","screens/ResetPassword.jsx","utils/setAuthToken.js","assets/Images/WulfBrandingLogoLightSmall.png","assets/data/AustinResume.docx","assets/data/socials.js","components/Navbar.jsx","components/Footer.jsx","components/AdminCertList.jsx","actions/Certificate/deleteCertificate.js","actions/Certificate/createCertificate.js","components/adminProjectsList.jsx","actions/Project/createProject.js","components/AdminBlogList.jsx","actions/Blog/deleteBlog.js","screens/AdminScreen.jsx","screens/Blog/Blog.jsx","actions/Blog/createBlog.js","actions/Blog/listBlogDetails.js","screens/Blog/BlogEditScreen.jsx","actions/Blog/updateBlog.js","utils/appendLeadingZeroes.js","screens/Certificate/CertificateEditScreen.jsx","actions/Certificate/listCertificateDetails.js","actions/Certificate/updateCertificate.js","screens/ProjectEditScreen.jsx","actions/Project/listProjectDetails.js","actions/Project/updateProject.js","components/PrivateRoute.jsx","components/Routes/AdminRoutes.js","components/Alert.jsx","screens/Blog/Article.jsx","App.js","reportWebVitals.js","reducers/rootReducer.js","reducers/alertReducer.js","reducers/userReducer.js","reducers/projectsReducer.js","reducers/certReducer.js","reducers/blogReducer.js","store.js","index.js"],"names":["Meta","title","description","keywords","name","content","defaultProps","formatDate","date","Intl","DateTimeFormat","format","Date","BlogItem","blog","Row","className","style","padding","margin","color","Col","textAlign","lg","blogTitle","length","substring","Image","src","blogImageUrl","alt","height","fluid","createdAt","to","_id","textDecoration","fontSize","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","BLOG_LIST_FAIL","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_DETAILS_FAIL","BLOG_DELETE_REQUEST","BLOG_DELETE_SUCCESS","BLOG_DELETE_FAIL","BLOG_CREATE_REQUEST","BLOG_CREATE_SUCCESS","BLOG_CREATE_FAIL","BLOG_CREATE_RESET","BLOG_UPDATE_REQUEST","BLOG_UPDATE_SUCCESS","BLOG_UPDATE_FAIL","BLOG_UPDATE_RESET","SET_ALERT","REMOVE_ALERT","setAlert","message","alertType","timeout","dispatch","id","v4","type","payload","setTimeout","PROJECT_LIST_REQUEST","PROJECT_LIST_SUCCESS","PROJECT_LIST_FAIL","PROJECT_DETAILS_REQUEST","PROJECT_DETAILS_SUCCESS","PROJECT_DETAILS_FAIL","PROJECT_DELETE_REQUEST","PROJECT_DELETE_SUCCESS","PROJECT_DELETE_FAIL","PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_CREATE_RESET","PROJECT_UPDATE_REQUEST","PROJECT_UPDATE_SUCCESS","PROJECT_UPDATE_FAIL","PROJECT_UPDATE_RESET","listProjects","keyword","pageNumber","a","axios","method","url","data","response","ProjectItem","project","Container","photo","Nav","fill","Item","Link","href","githubUrl","liveProjectURL","textIndent","languages","map","language","indx","display","Home","useDispatch","blogs","useSelector","state","listBlogs","mostRecentProject","getProjects","projects","console","log","useEffect","onInit","typewriter","typeString","pauseFor","deleteAll","start","marginTop","b","isFeatured","undefined","Loader","Spinner","animation","role","width","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","FormContainer","children","xs","md","LoginScreen","navigate","useNavigate","useState","email","setEmail","password","setPassword","userLogin","loading","userInfo","Form","onSubmit","e","preventDefault","post","localStorage","setItem","JSON","stringify","login","Group","controlId","FloatingLabel","label","Control","value","placeholder","onChange","target","Button","variant","paddingTop","About","Paginate","pages","page","Pagination","justifyContent","Array","keys","x","active","logout","removeItem","deleteProject","getState","delete","Projects","useParams","projectPage","projectDelete","loadingDelete","successDelete","success","CERTIFICATE_LIST_REQUEST","CERTIFICATE_LIST_SUCCESS","CERTIFICATE_LIST_FAIL","CERTIFICATE_DETAILS_REQUEST","CERTIFICATE_DETAILS_SUCCESS","CERTIFICATE_DETAILS_FAIL","CERTIFICATE_DELETE_REQUEST","CERTIFICATE_DELETE_SUCCESS","CERTIFICATE_DELETE_FAIL","CERTIFICATE_CREATE_REQUEST","CERTIFICATE_CREATE_SUCCESS","CERTIFICATE_CREATE_FAIL","CERTIFICATE_CREATE_RESET","CERTIFICATE_UPDATE_REQUEST","CERTIFICATE_UPDATE_SUCCESS","CERTIFICATE_UPDATE_FAIL","CERTIFICATE_UPDATE_RESET","listCertificates","Certificates","listCerts","certificates","minHeight","certificate","xl","backgroundColor","Card","Img","certificateImageUrl","Body","Title","issuingAuthority","Text","fontWeight","Blogs","Reset","setLoading","submitHandler","ResetPassword","resettoken","passConfirm","setPassConfirm","setAuthToken","token","defaults","headers","common","socials","social","social_link","social_fa_icon","Header","logo","onClick","as","resume","download","Footer","dateObj","newdate","getUTCMonth","getUTCFullYear","sticky","AdminProjectsList","certPageNumber","loadingCertificate","certDelete","certCreate","loadingCreate","successCreate","createdCertificate","deleteCertHandler","window","confirm","deleteCertificate","Table","striped","bordered","responsive","hover","dateOfCompletion","getMonth","getDate","getFullYear","loadingProject","projectCreate","createdProject","lang","AdminBlogList","blogPageNumber","loadingBlog","blogDelete","blogCreate","createdBlog","deleteBlogHandler","deleteBlog","AdminScreen","AdminCertList","Blog","blogDetails","loadingUpdate","blogData","setBlogData","uploading","setUploading","editorRef","useRef","show","setShow","handleClose","uploadFileHandler","file","files","formData","FormData","append","config","error","required","muted","Check","evt","editor","current","initialValue","apiKey","init","menubar","plugins","toolbar","content_style","codesample_languages","text","getContent","Modal","onHide","closeButton","parse","createBlog","listBlogDetails","get","BlogEditScreen","blogUpdate","successUpdate","put","updateBlog","appendLeadingZeroes","n","CertificateEditScreen","setName","setCertificateImageUrl","setIssuingAuthority","setDateOfCompletion","certDetails","certUpdate","formatted_date","listCertificateDetails","updateCertificate","ProjectEditScreen","match","setPhoto","setGithubUrl","setLiveProjectURL","setLanguages","setDescription","projectDetails","projectUpdate","listProjectDetails","updateProject","split","PrivateRoute","AdminRoutes","path","element","Alert","alert","fontFamily","Article","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","filter","middleware","thunk","initialState","getItem","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a963b080.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <HelmetProvider>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"keyword\" content={keywords} />\r\n      </Helmet>\r\n    </HelmetProvider>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Wulf Developments\",\r\n  description: \"Junior Software Engineer with a passion for code\",\r\n  keywords:\r\n    \"Software Engineering, developer, freelance, Software Developer, coding, personal portfolio\",\r\n};\r\n\r\nexport default Meta;\r\n","function formatDate(date) {\r\n  return new Intl.DateTimeFormat().format(new Date(date));\r\n}\r\n\r\nexport default formatDate;\r\n","import React from \"react\";\r\nimport { Col, Image, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport formatDate from \"../../utils/formatDate\";\r\nimport { FaArrowCircleRight } from \"react-icons/fa\";\r\n\r\nconst BlogItem = ({ blog }) => {\r\n  return (\r\n    <Row\r\n      className=\"project-edit-container\"\r\n      style={{ padding: \"2.5% \", margin: \"5% 0\", color: \"white\" }}\r\n    >\r\n      <Col style={{ textAlign: \"center\" }} lg={6}>\r\n        <h2>\r\n          {blog.blogTitle.length > 15\r\n            ? blog.blogTitle.substring(0, 15) + \"...\"\r\n            : blog.blogTitle}\r\n        </h2>\r\n        <Image\r\n          src={blog.blogImageUrl}\r\n          alt=\"Blog Featured Image\"\r\n          style={{ height: \"200px\" }}\r\n          fluid\r\n        />\r\n      </Col>\r\n      <Col>\r\n        <p>{blog.description}</p>\r\n        <p>Posted on: {formatDate(blog.createdAt)}</p>\r\n      </Col>\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <Link\r\n          to={`/blog/article/${blog._id}`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          Read More <FaArrowCircleRight style={{ fontSize: \"1.5em\" }} />\r\n        </Link>\r\n      </div>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default BlogItem;\r\n","export const BLOG_LIST_REQUEST = \"BLOG_LIST_REQUEST\";\r\nexport const BLOG_LIST_SUCCESS = \"BLOG_LIST_SUCCESS\";\r\nexport const BLOG_LIST_FAIL = \"BLOG_LIST_FAIL\";\r\n\r\nexport const BLOG_DETAILS_REQUEST = \"BLOG_DETAILS_REQUEST\";\r\nexport const BLOG_DETAILS_SUCCESS = \"BLOG_DETAILS_SUCCESS\";\r\nexport const BLOG_DETAILS_FAIL = \"BLOG_DETAILS_FAIL\";\r\n\r\nexport const BLOG_DELETE_REQUEST = \"BLOG_DELETE_REQUEST\";\r\nexport const BLOG_DELETE_SUCCESS = \"BLOG_DELETE_SUCCESS\";\r\nexport const BLOG_DELETE_FAIL = \"BLOG_DELETE_FAIL\";\r\n\r\nexport const BLOG_CREATE_REQUEST = \"BLOG_CREATE_REQUEST\";\r\nexport const BLOG_CREATE_SUCCESS = \"BLOG_CREATE_SUCCESS\";\r\nexport const BLOG_CREATE_FAIL = \"BLOG_CREATE_FAIL\";\r\nexport const BLOG_CREATE_RESET = \"BLOG_CREATE_RESET\";\r\n\r\nexport const BLOG_UPDATE_REQUEST = \"BLOG_UPDATE_REQUEST\";\r\nexport const BLOG_UPDATE_SUCCESS = \"BLOG_UPDATE_SUCCESS\";\r\nexport const BLOG_UPDATE_FAIL = \"BLOG_UPDATE_FAIL\";\r\nexport const BLOG_UPDATE_RESET = \"BLOG_UPDATE_RESET\";\r\n","export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../constants/alertConstants\";\r\nimport { v4 } from \"uuid\";\r\n\r\nexport const setAlert =\r\n  (message, alertType, timeout = 5000) =>\r\n  (dispatch) => {\r\n    const id = v4();\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { message, alertType, id },\r\n    });\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n  };\r\n","export const PROJECT_LIST_REQUEST = \"PROJECT_LIST_REQUEST\";\r\nexport const PROJECT_LIST_SUCCESS = \"PROJECT_LIST_SUCCESS\";\r\nexport const PROJECT_LIST_FAIL = \"PROJECT_LIST_FAIL\";\r\n\r\nexport const PROJECT_DETAILS_REQUEST = \"PROJECT_DETAILS_REQUEST\";\r\nexport const PROJECT_DETAILS_SUCCESS = \"PROJECT_DETAILS_SUCCESS\";\r\nexport const PROJECT_DETAILS_FAIL = \"PROJECT_DETAILS_FAIL\";\r\n\r\nexport const PROJECT_DELETE_REQUEST = \"PROJECT_DELETE_REQUEST\";\r\nexport const PROJECT_DELETE_SUCCESS = \"PROJECT_DELETE_SUCCESS\";\r\nexport const PROJECT_DELETE_FAIL = \"PROJECT_DELETE_FAIL\";\r\n\r\nexport const PROJECT_CREATE_REQUEST = \"PROJECT_CREATE_REQUEST\";\r\nexport const PROJECT_CREATE_SUCCESS = \"PROJECT_CREATE_SUCCESS\";\r\nexport const PROJECT_CREATE_FAIL = \"PROJECT_CREATE_FAIL\";\r\nexport const PROJECT_CREATE_RESET = \"PROJECT_CREATE_RESET\";\r\n\r\nexport const PROJECT_UPDATE_REQUEST = \"PROJECT_UPDATE_REQUEST\";\r\nexport const PROJECT_UPDATE_SUCCESS = \"PROJECT_UPDATE_SUCCESS\";\r\nexport const PROJECT_UPDATE_FAIL = \"PROJECT_UPDATE_FAIL\";\r\nexport const PROJECT_UPDATE_RESET = \"PROJECT_UPDATE_RESET\";\r\n","import axios from \"axios\";\r\nimport {\r\n  PROJECT_LIST_FAIL,\r\n  PROJECT_LIST_REQUEST,\r\n  PROJECT_LIST_SUCCESS,\r\n} from \"../../constants/projectsContstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const listProjects =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      // Dispatch request type\r\n      dispatch({ type: PROJECT_LIST_REQUEST });\r\n      // axios call\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: `/api/projects?keyword=${keyword}&pageNumber=${pageNumber}`,\r\n      });\r\n      // on success dispatch request success\r\n      dispatch({\r\n        type: PROJECT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: PROJECT_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n      dispatch(setAlert(message, \"danger\"));\r\n    }\r\n  };\r\n","import React from \"react\";\r\nimport { Col, Container, Image, Nav, Row } from \"react-bootstrap\";\r\n\r\nconst ProjectItem = ({ project }) => {\r\n  return (\r\n    <Container fluid key={project._id} className=\"project-container\">\r\n      <Row>\r\n        <Row className=\"project-container-title\">\r\n          <Col>{project.name}</Col>\r\n        </Row>\r\n        <Col lg={6} className=\"project-container-left\">\r\n          <Image\r\n            fluid\r\n            className=\"project-container-img\"\r\n            src={project.photo}\r\n            alt={`${project.name} image`}\r\n          />\r\n          <Nav fill className=\"project-links\" style={{ padding: \"5%\" }}>\r\n            <Nav.Item>\r\n              <Nav.Link href={project.githubUrl}>\r\n                <i className=\"fab fa-github\" /> Github Link\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link href={project.liveProjectURL}>\r\n                <i className=\"fas fa-external-link-alt\" /> Live Project\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Col>\r\n        <Col className=\"project-container-right\">\r\n          <Container>\r\n            <h4\r\n              style={{\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Description\r\n            </h4>\r\n            <p style={{ textIndent: \"40px\", color: \"white\" }}>\r\n              {project.description}\r\n            </p>\r\n          </Container>\r\n          <Container fluid>\r\n            <h4\r\n              style={{\r\n                color: \"white\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              Languages/Stack Used\r\n            </h4>\r\n            <Container fluid style={{ textAlign: \"center\" }}>\r\n              {project.languages.map((language, indx) => {\r\n                return (\r\n                  <p\r\n                    style={{\r\n                      display: \"inline\",\r\n                      color: \"white\",\r\n                      padding: \"2%\",\r\n                    }}\r\n                    key={indx}\r\n                  >\r\n                    {language}{\" \"}\r\n                  </p>\r\n                );\r\n              })}\r\n            </Container>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProjectItem;\r\n","import React, { useEffect } from \"react\";\r\n//importing typewriter-effect\r\nimport Typewriter from \"typewriter-effect\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Meta from \"../components/Meta\";\r\n\r\n// actions\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BlogItem from \"./Blog/BlogItem\";\r\nimport { getFeaturedArticles } from \"../actions/Blog/getFeaturedArticles\";\r\nimport { listProjects } from \"../actions/Project/listProjects\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectItem from \"./ProjectItem\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { blogs } = useSelector((state) => state.listBlogs);\r\n  const { projects } = useSelector((state) => state.getProjects);\r\n\r\n  const mostRecentProject = projects[0];\r\n  console.log(mostRecentProject);\r\n  useEffect(() => {\r\n    dispatch(listProjects());\r\n    dispatch(getFeaturedArticles());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Meta title={`WD | Home`} />\r\n      <Container style={{ padding: \"5%\" }}>\r\n        <div className=\"typeWriterContainer\">\r\n          <div className=\"typeWriterParent\">\r\n            <p className=\"typeWriterIntro\">Hi, I am Austin Howard,</p>\r\n            <Typewriter\r\n              onInit={(typewriter) => {\r\n                typewriter\r\n                  .typeString(\"a Father.\")\r\n                  .pauseFor(1000)\r\n                  .deleteAll()\r\n\r\n                  .typeString(\"a Husband.\")\r\n                  .pauseFor(1000)\r\n                  .deleteAll()\r\n\r\n                  .typeString(\"a Singer.\")\r\n                  .pauseFor(1000)\r\n                  .deleteAll()\r\n\r\n                  .typeString(\"a Visionary.\")\r\n                  .pauseFor(1000)\r\n                  .deleteAll()\r\n\r\n                  .typeString(\"a Software Developer!\")\r\n\r\n                  .start();\r\n              }}\r\n            />\r\n          </div>\r\n          <Row style={{ marginTop: \"2%\" }}>\r\n            <div style={{ textAlign: \"center\", padding: \"5% 0\" }}>\r\n              <h4>Featured Articles</h4>\r\n              <Link to=\"/list-blogs\" style={{ textDecoration: \"none\" }}>\r\n                See more\r\n              </Link>\r\n            </div>\r\n            {blogs.map((b) => {\r\n              if (b.isFeatured === true) {\r\n                return <BlogItem blog={b} />;\r\n              }\r\n              return <div></div>;\r\n            })}\r\n          </Row>\r\n          <Row style={{ marginTop: \"2%\" }}>\r\n            <div style={{ textAlign: \"center\", padding: \"5% 0\" }}>\r\n              <h4>Most Recent Project</h4>\r\n              <Link to=\"/projects\" style={{ textDecoration: \"none\" }}>\r\n                See more\r\n              </Link>\r\n            </div>\r\n            {mostRecentProject !== undefined && (\r\n              <ProjectItem project={mostRecentProject} />\r\n            )}\r\n          </Row>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\nimport {\r\n  BLOG_LIST_FAIL,\r\n  BLOG_LIST_REQUEST,\r\n  BLOG_LIST_SUCCESS,\r\n} from \"../../constants/blogConstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const getFeaturedArticles = () => async (dispatch) => {\r\n  try {\r\n    // Dispatch request type\r\n    dispatch({ type: BLOG_LIST_REQUEST });\r\n    // axios call\r\n    const { data } = await axios({\r\n      method: \"GET\",\r\n      url: `/api/blog/featured`,\r\n    });\r\n    console.log(data);\r\n    // on success dispatch request success\r\n    dispatch({\r\n      type: BLOG_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: BLOG_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n    dispatch(setAlert(`Problem getting blogs from DB: ${message}`, \"danger\"));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container style={{ padding: \"2% 0\", textAlign: \"center\" }}>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={12} lg={8}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Button, FloatingLabel, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport { login } from \"../actions/Auth/login\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst LoginScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`WD | Admin Login`} />\r\n      <Container>\r\n        <FormContainer>\r\n          <h1 style={{ color: \"white\" }}>Admin Sign-in</h1>\r\n          {loading && <Loader />}\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <FloatingLabel\r\n                controlId=\"floatingInput\"\r\n                label=\"Email address\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Email address\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                ></Form.Control>\r\n              </FloatingLabel>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"password\">\r\n              <FloatingLabel\r\n                controlId=\"floatinInput\"\r\n                label=\"Password\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                ></Form.Control>\r\n              </FloatingLabel>\r\n            </Form.Group>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"dark\"\r\n              className=\"styled-button\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Sign-In\r\n            </Button>\r\n          </Form>\r\n          <Container style={{ paddingTop: \"5%\" }}>\r\n            <Link\r\n              style={{ textDecoration: \"none\" }}\r\n              className=\"gradient-text\"\r\n              to=\"/resetpassword\"\r\n            >\r\n              <span>Forgot Password</span>\r\n            </Link>\r\n          </Container>\r\n        </FormContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n} from \"../../constants/userConstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.post(\"/api/auth/login\", { email, password });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch(setAlert(\"Login Successful\", \"success\"));\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: message,\r\n    });\r\n    dispatch(setAlert(message, \"danger\"));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <Meta\r\n        title={`WD | About the Developer`}\r\n        description={`Learn More about the developer`}\r\n      />\r\n      <Container fluid className=\"aboutMe\">\r\n        <img src=\"/images/headshot.jpg\" alt=\"profile pic\" />\r\n        <div>\r\n          <p className=\"storyText\">\r\n            <span\r\n              className=\"navbar-signature gradient-text\"\r\n              style={{ fontSize: \"2.25rem\" }}\r\n            >\r\n              Austin Howard\r\n            </span>{\" \"}\r\n            is a proactive junior software developer with a passion for code and\r\n            solid background of superior performance in foundational roles. He\r\n            is a diligent, self-directed learner with more than 4 years of\r\n            personal study, as well as instruction at professional educational\r\n            institutions. Austin is proficient with several full-stack\r\n            languages, frameworks, and libraries. He is also experienced in the\r\n            day-to-day operations of businesses and the importance of each role\r\n            within an organization.\r\n          </p>\r\n          <p className=\"storyText\">\r\n            From Early on in Austin's youth, technology seemed to come easy to\r\n            him. Much like most people who pursue tech as a field. Austin had a\r\n            constant yearning to consume technology. One of Austin's very first\r\n            memories for technology came early about the first grade. The class\r\n            was having a show-and-tell and a classmate had brought a computer\r\n            game for the class to play on the teachers computer. The teacher had\r\n            difficulty with the installation of the game, all until Austin gave\r\n            it a shot, he was able to install the game and the class was able to\r\n            enjoy the content. However it didnt dawn on Austin just what\r\n            something like this meant until later in life.\r\n          </p>\r\n          <p className=\"storyText\">\r\n            Growing up in Southeast Appalachia, public education did what public\r\n            education does best. It trained Austin to work long monotonous hours\r\n            with the intent to either work in a factory or work in a coal mine.\r\n            from the very beginning Austin knew that he would not be taking this\r\n            kind of path in life. However it wasnt until he was in 8th grade\r\n            that he knew what he wanted to do exactly with his life.\r\n          </p>\r\n          <p className=\"storyText\">\r\n            8th Grade brought Austin an amazing opportunity with schooling, it\r\n            was then on the very last few weeks of 8th grade that the high\r\n            school was partnering with the local community college to offer a\r\n            course to grades 9-12, the course was known as Project-Lead-The-Way\r\n            or PLTW, in its design it was to offer students a glance into the\r\n            wonderful world of engineering by exposing prospective students to\r\n            different fields of study. Such areas included CAD, Architecture and\r\n            Electrical engineering. Austin fell in love with Electrical\r\n            Engineering. Finally the world seemed a lot clearer. Austin began to\r\n            devour these courses, so much so that his only reason for wanting to\r\n            go to school was to atend these courses. From there it seemed like\r\n            the future was known and Austin had a motto for his life. \"To build\r\n            a better future, we must create today.\" However life had its other\r\n            plans.\r\n          </p>\r\n          <p className=\"storyText\">\r\n            It was in high school that Austin met the love of his life, His\r\n            wife. Many things would change in that time, and ultimately it would\r\n            lead to the point where it was unfeasible to pursue an Electrical\r\n            Engineering Degree. In fact, it would seem that Austin would fall\r\n            back into the mold that so many did, as he entered General\r\n            non-skilled labor positions. Though this would turn to be a blessing\r\n            in disguise. One fate-filled day while working an over-night\r\n            position at Wal-Mart. Austin overheard a couple coworkers talking\r\n            about playing Dungeons and Dragons. The idea of D&D intrigued\r\n            Austin. After all, as an avid gamer RPG's where among the most\r\n            favored. it was here with this group of rag-tag co-workers looking\r\n            for a release from the work week. That Austin would discover the\r\n            next step in his life.\r\n          </p>\r\n          <p className=\"storyText\">\r\n            As it would stand, running up to Dragons is likely the quickest way\r\n            to die in D&D. It became a running joke of how long Austin's\r\n            characters would last but it was in this flurry of mistakes that\r\n            Austin noticed something. character creation, is a long tedious\r\n            process to do on paper... An idea was hatched to create a character\r\n            creator program that would speed up the process. From that idea came\r\n            the realization that Software Development would be an amazing field\r\n            to pursue. The concept was nearly the same as what had been thought\r\n            earlier in Austins life \"To build a better future, we must create\r\n            today.\" The process of automation through software. Make life better\r\n            by automating away the tediousness of life's problems.\r\n          </p>\r\n          <p className=\"storyText\">\r\n            From there Austin began to do a lot of research and self-teaching\r\n            for Software Development starting with the book, \"Python For The\r\n            Absolute Begginer\" and coming to a head of where Austin is now. With\r\n            a combined knowledge from professional institutions, and\r\n            self-learning. Austin wants to change the world through code.\r\n            Automating processes and parts of life to make living easier.\r\n          </p>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst Paginate = ({ pages, page }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination style={{ justifyContent: \"center\" }}>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <Pagination.Item\r\n            style={{ color: \"#012f41\" }}\r\n            href={`/projects/page/${x + 1}`}\r\n            active={x + 1 === page}\r\n          >\r\n            {x + 1}\r\n          </Pagination.Item>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import { USER_LOGOUT } from \"../../constants/userConstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch(setAlert(`Logout Successful`, \"success\"));\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  PROJECT_DELETE_FAIL,\r\n  PROJECT_DELETE_REQUEST,\r\n  PROJECT_DELETE_SUCCESS,\r\n} from \"../../constants/projectsContstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const deleteProject = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_DELETE_REQUEST,\r\n    });\r\n    await axios.delete(`/api/projects/${id}`);\r\n\r\n    dispatch({\r\n      type: PROJECT_DELETE_SUCCESS,\r\n    });\r\n    dispatch(setAlert(`Project ${id} has been removed`, \"success\"));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: PROJECT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// components\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\n// actions\r\nimport { listProjects } from \"../actions/Project/listProjects\";\r\nimport { deleteProject } from \"../actions/Project/deleteProject\";\r\nimport { Col, Container, Image, Row, Nav } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Meta from \"../components/Meta\";\r\nimport ProjectItem from \"./ProjectItem\";\r\n\r\nconst Projects = () => {\r\n  const { pageNumber } = useParams() || 1;\r\n  const { keyword } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading,\r\n    projects,\r\n    page: projectPage,\r\n    pages,\r\n  } = useSelector((state) => state.getProjects);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { loading: loadingDelete, success: successDelete } = useSelector(\r\n    (state) => state.projectDelete\r\n  );\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProject(id));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(listProjects(keyword, pageNumber));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, pageNumber, successDelete]);\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`WD | See my latest projects`} />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          {loadingDelete && <Loader />}\r\n          {projects &&\r\n            projects.map((project) => {\r\n              return <ProjectItem project={project} />;\r\n            })}\r\n          <Row style={{ width: \"100%\" }}>\r\n            <Paginate\r\n              pages={pages}\r\n              page={projectPage}\r\n              keyword={keyword ? keyword : \"\"}\r\n            />\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","export const CERTIFICATE_LIST_REQUEST = \"CERTIFICATE_LIST_REQUEST\";\r\nexport const CERTIFICATE_LIST_SUCCESS = \"CERTIFICATE_LIST_SUCCESS\";\r\nexport const CERTIFICATE_LIST_FAIL = \"CERTIFICATE_LIST_FAIL\";\r\n\r\nexport const CERTIFICATE_DETAILS_REQUEST = \"CERTIFICATE_DETAILS_REQUEST\";\r\nexport const CERTIFICATE_DETAILS_SUCCESS = \"CERTIFICATE_DETAILS_SUCCESS\";\r\nexport const CERTIFICATE_DETAILS_FAIL = \"CERTIFICATE_DETAILS_FAIL\";\r\n\r\nexport const CERTIFICATE_DELETE_REQUEST = \"CERTIFICATE_DELETE_REQUEST\";\r\nexport const CERTIFICATE_DELETE_SUCCESS = \"CERTIFICATE_DELETE_SUCCESS\";\r\nexport const CERTIFICATE_DELETE_FAIL = \"CERTIFICATE_DELETE_FAIL\";\r\n\r\nexport const CERTIFICATE_CREATE_REQUEST = \"CERTIFICATE_CREATE_REQUEST\";\r\nexport const CERTIFICATE_CREATE_SUCCESS = \"CERTIFICATE_CREATE_SUCCESS\";\r\nexport const CERTIFICATE_CREATE_FAIL = \"CERTIFICATE_CREATE_FAIL\";\r\nexport const CERTIFICATE_CREATE_RESET = \"CERTIFICATE_CREATE_RESET\";\r\n\r\nexport const CERTIFICATE_UPDATE_REQUEST = \"CERTIFICATE_UPDATE_REQUEST\";\r\nexport const CERTIFICATE_UPDATE_SUCCESS = \"CERTIFICATE_UPDATE_SUCCESS\";\r\nexport const CERTIFICATE_UPDATE_FAIL = \"CERTIFICATE_UPDATE_FAIL\";\r\nexport const CERTIFICATE_UPDATE_RESET = \"CERTIFICATE_UPDATE_RESET\";","import axios from \"axios\";\r\nimport {\r\n  CERTIFICATE_LIST_FAIL,\r\n  CERTIFICATE_LIST_REQUEST,\r\n  CERTIFICATE_LIST_SUCCESS,\r\n} from \"../../constants/certConstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const listCertificates =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      // Dispatch request type\r\n      dispatch({ type: CERTIFICATE_LIST_REQUEST });\r\n      // axios call\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: `/api/certs?keyword=${keyword}&pageNumber=${pageNumber}`,\r\n      });\r\n      // on success dispatch request success\r\n      dispatch({\r\n        type: CERTIFICATE_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: CERTIFICATE_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n      dispatch(setAlert(message, \"danger\"));\r\n    }\r\n  };\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// components\r\nimport Loader from \"../../components/Loader\";\r\nimport Meta from \"../../components/Meta\";\r\n// actions\r\nimport { listCertificates } from \"../../actions/Certificate/listCertificates\";\r\nimport { Card, Col, Container, Pagination, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Certificates = () => {\r\n  const { pageNumber } = useParams() || 1;\r\n  const { keyword } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, certificates, page, pages } = useSelector(\r\n    (state) => state.listCerts\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(listCertificates(keyword, pageNumber));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <Meta\r\n        title={`WD | Awards and Accolades`}\r\n        description={`My acheivments, both big and small!`}\r\n      />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container style={{ padding: \"5%\", minHeight: \"700px\" }}>\r\n          <Row style={{ textAlign: \"center\" }} className=\"gradient-text\">\r\n            <Col>\r\n              <h1>Awards/Certificates</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ justifyContent: \"space-around\" }}>\r\n            {certificates.map((certificate) => {\r\n              return (\r\n                <Col\r\n                  key={certificate._id}\r\n                  lg={6}\r\n                  xl={4}\r\n                  style={{\r\n                    padding: \"2%\",\r\n                    backgroundColor: \"rgba(0,0,0,0) !important\",\r\n                  }}\r\n                >\r\n                  <Card className=\"certificate-card\">\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      src={`${certificate.certificateImageUrl}`}\r\n                      fluid\r\n                    />\r\n                    <Card.Body>\r\n                      <Card.Title className=\"gradient-text\">\r\n                        {certificate.issuingAuthority}\r\n                      </Card.Title>\r\n                      <Card.Text\r\n                        style={{ color: \"white\", fontWeight: \"lighter\" }}\r\n                      >\r\n                        {certificate.name}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n          <Row style={{ width: \"100%\", margin: \"2% 0\" }}>\r\n            {pages > 1 && (\r\n              <Pagination style={{ justifyContent: \"center\" }}>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                  <Pagination.Item\r\n                    key={x + 1}\r\n                    style={{ color: \"#012f41\" }}\r\n                    href={`/certificates/page/${x + 1}`}\r\n                    active={x + 1 === page}\r\n                  >\r\n                    {x + 1}\r\n                  </Pagination.Item>\r\n                ))}\r\n              </Pagination>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Certificates;\r\n","import axios from \"axios\";\r\nimport {\r\n  BLOG_LIST_FAIL,\r\n  BLOG_LIST_REQUEST,\r\n  BLOG_LIST_SUCCESS,\r\n} from \"../../constants/blogConstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const listBlogs =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      // Dispatch request type\r\n      dispatch({ type: BLOG_LIST_REQUEST });\r\n      // axios call\r\n      const { data } = await axios({\r\n        method: \"GET\",\r\n        url: `/api/blog?keyword=${keyword}&pageNumber=${pageNumber}`,\r\n      });\r\n      // on success dispatch request success\r\n      dispatch({\r\n        type: BLOG_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: BLOG_LIST_FAIL,\r\n        payload: message,\r\n      });\r\n      dispatch(setAlert(`Problem getting blogs from DB: ${message}`, \"danger\"));\r\n    }\r\n  };\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { Container} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { listBlogs } from \"../../actions/Blog/listBlogs\";\r\n// components\r\nimport Meta from \"../../components/Meta\";\r\nimport Loader from \"../../components/Loader\";\r\n// actions\r\nimport BlogItem from \"./BlogItem\";\r\nconst Blogs = () => {\r\n  // eslint-disable-next-line\r\n  const { loading, blogs } = useSelector((state) => state.listBlogs);\r\n  const { pageNumber } = useParams() || 1;\r\n  const { keyword } = useParams();\r\n  // eslint-disable-next-line\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(listBlogs(keyword, pageNumber));\r\n    // eslint-disable-next-line\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Meta title={`WD | View my blog`} />\r\n      <Container>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          blogs &&\r\n          blogs.map((blog) => {\r\n            return <BlogItem blog={blog} />;\r\n          })\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blogs;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button, FloatingLabel, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\n// Components\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nconst Reset = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(!loading);\r\n      const { data } = await axios({\r\n        method: \"POST\",\r\n        url: \"/api/auth/forgotpassword\",\r\n        data: { email },\r\n      });\r\n      if (data.success) {\r\n        setLoading(false);\r\n      }\r\n      dispatch(setAlert(`Email sent successfully`, \"success\"));\r\n    } catch (e) {\r\n      console.log(e);\r\n      setLoading(false);\r\n      dispatch(setAlert(e.message, \"danger\"));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Meta title={`WD | Reset Admin password`} />\r\n      <Container>\r\n        <FormContainer>\r\n          <h1 style={{ color: \"white\" }}>Reset Account Password</h1>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"email\">\r\n              <FloatingLabel\r\n                controlId=\"floatingInput\"\r\n                label=\"Email address\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Email address\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                ></Form.Control>\r\n              </FloatingLabel>\r\n              <Form.Text>\r\n                Please Enter the Email Associated with the account, if the\r\n                account exists in our system you will receive an email with a\r\n                link to reset your password.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"dark\"\r\n                style={{ width: \"100%\", marginTop: \"2%\" }}\r\n              >\r\n                Send reset link\r\n              </Button>\r\n            )}\r\n          </Form>\r\n        </FormContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reset;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Form, Button, FloatingLabel, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// Components\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { USER_LOGIN_SUCCESS } from \"../constants/userConstants\";\r\nimport { setAlert } from \"../actions/alert\";\r\n\r\nconst ResetPassword = () => {\r\n  // get param token\r\n  const { resettoken } = useParams();\r\n  const dispatch = useDispatch();\r\n  // State\r\n  const navigate = useNavigate();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passConfirm, setPassConfirm] = useState(\"\");\r\n  // eslint-disable-next-line\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Pull items from state\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  let { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, userInfo]);\r\n\r\n  // submit handler\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (password === passConfirm) {\r\n        const { data } = await axios({\r\n          method: \"PUT\",\r\n          url: `/api/auth/resetpassword/${resettoken}`,\r\n          data: { password },\r\n        });\r\n        dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data,\r\n        });\r\n        dispatch(setAlert(`Password Reset`, \"success\"));\r\n      }\r\n      setLoading(false);\r\n      dispatch(setAlert(`Passwords Have to Match`, \"danger\"));\r\n    } catch (e) {\r\n      setLoading(false);\r\n      dispatch(setAlert(`Password Reset Failed... ${e.message}`, \"danger\"));\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <FormContainer>\r\n        <h1 style={{ color: \"white\" }}>Enter New Password</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"password\">\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Enter New Password\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"New Password\"\r\n                onChange={(e) => {\r\n                  setPassword(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FloatingLabel>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"passConfirm\">\r\n            <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Confirm New Password\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={passConfirm}\r\n                placeholder=\"New Password\"\r\n                onChange={(e) => {\r\n                  setPassConfirm(e.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </FloatingLabel>\r\n          </Form.Group>\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"dark\"\r\n              style={{ width: \"100%\", marginTop: \"2%\" }}\r\n            >\r\n              Set Password\r\n            </Button>\r\n          )}\r\n        </Form>\r\n      </FormContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import axios from \"axios\";\r\n\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","export default __webpack_public_path__ + \"static/media/WulfBrandingLogoLightSmall.95c9816e.png\";","export default __webpack_public_path__ + \"static/media/AustinResume.7ac2acc8.docx\";","export const socials = [\r\n  {\r\n    social: \"Facebook\",\r\n    social_link: \"https://www.facebook.com/austin.howard.31/\",\r\n    social_fa_icon: \"fab fa-facebook-square\",\r\n  },\r\n  {\r\n    social: \"Github\",\r\n    social_link: \"https://github.com/CNFishead\",\r\n    social_fa_icon: \"fab fa-github-square\",\r\n  },\r\n  {\r\n    social: \"LinkedIn\",\r\n    social_link: \"https://www.linkedin.com/in/cnfishead1993/\",\r\n    social_fa_icon: \"fab fa-linkedin\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { Container, Image, Nav } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { logout } from \"../actions/Auth/logout\";\r\nimport logo from \"../assets/Images/WulfBrandingLogoLightSmall.png\";\r\n\r\n// Resume\r\nimport resume from \"../assets/data/AustinResume.docx\";\r\nimport { socials } from \"../assets/data/socials\";\r\n\r\nconst Header = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <Container fluid className=\"navbar-container\">\r\n        <Link to=\"/\">\r\n          <Image className=\"navbar-brand-logo\" src={logo} alt=\"logo\" />\r\n        </Link>\r\n        <div style={{ textAlign: \"end\" }}>\r\n          <h2>Wulf Developments</h2>\r\n          <h4>Software Developer</h4>\r\n          <h6\r\n            onClick={\r\n              userInfo\r\n                ? logoutHandler\r\n                : () => {\r\n                    navigate(\"/login\");\r\n                  }\r\n            }\r\n            className=\"navbar-signature gradient-text\"\r\n          >\r\n            Austin Howard\r\n          </h6>\r\n          <div className=\"social-links\">\r\n            {socials.map((social, indx) => {\r\n              return (\r\n                <div key={indx} className=\"social-link\">\r\n                  <a href={social.social_link}>\r\n                    <i\r\n                      className={`${social.social_fa_icon} social-link-icon`}\r\n                    />\r\n                  </a>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n      <Nav fill className=\"nav-links\">\r\n        <Nav.Item>\r\n          <Nav.Link as={Link} to=\"/about\">\r\n            About\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link href=\"/certificates\">Certificates</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link as={Link} to=\"/projects\">\r\n            Projects\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link as={Link} to=\"/list-blogs\">\r\n            Blog\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link href={resume} download>\r\n            <i className=\"fas fa-file-download\" /> Resume\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        {userInfo && (\r\n          <Nav.Item>\r\n            <Nav.Link as={Link} to=\"/admin/adminscreen\">\r\n              Admin Screen\r\n            </Nav.Link>\r\n          </Nav.Item>\r\n        )}\r\n      </Nav>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { socials } from \"../assets/data/socials\";\r\n\r\nconst Footer = () => {\r\n  let dateObj = new Date();\r\n  let month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n  let year = dateObj.getUTCFullYear();\r\n\r\n  let newdate = month + \"/\" + year;\r\n  return (\r\n    <footer style={{ sticky: \"bottom\", textAlign: \"center\" }}>\r\n      <Container className=\"social-links\">\r\n        {socials.map((social, indx) => {\r\n          return (\r\n            <div key={indx} className=\"social-link\">\r\n              <a href={social.social_link}>\r\n                <i className={`${social.social_fa_icon} social-link-icon`} />\r\n              </a>\r\n            </div>\r\n          );\r\n        })}\r\n        <Row>\r\n          <Col style={{ color: \"#f3ec78\" }}>\r\n            <p>Connect with me!</p>\r\n            <p>Wulf Developments {newdate}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n// components\r\nimport Loader from \"./Loader\";\r\n// actions\r\nimport { createCertificate } from \"../actions/Certificate/createCertificate\";\r\nimport { deleteCertificate } from \"../actions/Certificate/deleteCertificate\";\r\nimport { listCertificates } from \"../actions/Certificate/listCertificates\";\r\n// constants\r\nimport { CERTIFICATE_CREATE_RESET } from \"../constants/certConstants\";\r\n\r\nconst AdminProjectsList = () => {\r\n  const { certPageNumber } = useParams() || 1;\r\n  const { keyword } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading: loadingCertificate,\r\n    certificates,\r\n    pages,\r\n    page,\r\n  } = useSelector((state) => state.listCerts);\r\n\r\n  const { loading: loadingDelete, success: successDelete } = useSelector(\r\n    (state) => state.certDelete\r\n  );\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    certificate: createdCertificate,\r\n  } = useSelector((state) => state.certCreate);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: CERTIFICATE_CREATE_RESET });\r\n    if (successCreate) {\r\n      navigate(`/admin/certificate-edit/${createdCertificate._id}`);\r\n    } else {\r\n      dispatch(listCertificates(keyword, certPageNumber));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [\r\n    dispatch,\r\n    keyword,\r\n    navigate,\r\n    certPageNumber,\r\n    successCreate,\r\n    successDelete,\r\n  ]);\r\n\r\n  const createCertHandler = () => {\r\n    dispatch(createCertificate());\r\n  };\r\n\r\n  const deleteCertHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteCertificate(id));\r\n    }\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col>\r\n          <h1 style={{ color: \"white\" }}>Certificates</h1>\r\n        </Col>\r\n        <Col style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            className=\"my-3\"\r\n            variant=\"success\"\r\n            onClick={createCertHandler}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Create Certificate\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {loadingCreate && <Loader />}\r\n      {loadingCertificate ? (\r\n        <Loader />\r\n      ) : (\r\n        <Table\r\n          striped\r\n          bordered\r\n          responsive\r\n          hover\r\n          variant=\"dark\"\r\n          className=\"table-sm\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>NAME</th>\r\n              <th>DATE OF COMPLETION</th>\r\n              <th>IMAGE PATH</th>\r\n              <th>Edit / Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {certificates.map((certificate) => {\r\n              let date = new Date(certificate.dateOfCompletion);\r\n              console.log(date);\r\n              return (\r\n                <tr key={certificate._id}>\r\n                  <td>{certificate.name}</td>\r\n                  {/* Date, starts at zero, so add 1 for it to display correctly */}\r\n                  <td>{`${date.getMonth() + 1}-${\r\n                    date.getDate() + 1\r\n                  }-${date.getFullYear()}`}</td>\r\n                  <td>{certificate.certificateImageUrl}</td>\r\n                  <td>\r\n                    <Link to={`/admin/certificate-edit/${certificate._id}`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </Link>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteCertHandler(certificate._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <Row style={{ width: \"100%\", margin: \"2% 0\" }}>\r\n        {pages > 1 && (\r\n          <Pagination style={{ justifyContent: \"center\" }}>\r\n            {[...Array(pages).keys()].map((x) => (\r\n              <Pagination.Item\r\n                key={x + 1}\r\n                style={{ color: \"#012f41\" }}\r\n                href={`/admin/adminscreen/certificates/${x + 1}`}\r\n                active={x + 1 === page}\r\n              >\r\n                {x + 1}\r\n              </Pagination.Item>\r\n            ))}\r\n          </Pagination>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminProjectsList;\r\n","import axios from \"axios\";\r\nimport {\r\n  CERTIFICATE_DELETE_FAIL,\r\n  CERTIFICATE_DELETE_REQUEST,\r\n  CERTIFICATE_DELETE_SUCCESS,\r\n} from \"../../constants/certConstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const deleteCertificate = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CERTIFICATE_DELETE_REQUEST,\r\n    });\r\n    await axios.delete(`/api/certs/${id}`);\r\n\r\n    dispatch({\r\n      type: CERTIFICATE_DELETE_SUCCESS,\r\n    });\r\n    dispatch(setAlert(\"Certificate Removed\", \"success\"));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: CERTIFICATE_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  CERTIFICATE_CREATE_FAIL,\r\n  CERTIFICATE_CREATE_REQUEST,\r\n  CERTIFICATE_CREATE_SUCCESS,\r\n} from \"../../constants/certConstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const createCertificate = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CERTIFICATE_CREATE_REQUEST,\r\n    });\r\n    const { data } = await axios.post(`/api/certs`, {\r\n      name: \"blank certificate\",\r\n      issuingAuthority:\r\n        \"This is a blank Certificate, pardon my dust as i clean up\",\r\n    });\r\n\r\n    dispatch({\r\n      type: CERTIFICATE_CREATE_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n    dispatch(setAlert(\"Certificate Created\", \"success\"));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: CERTIFICATE_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n// components\r\nimport Loader from \"./Loader\";\r\n// actions\r\nimport { listProjects } from \"../actions/Project/listProjects\";\r\nimport { createProject } from \"../actions/Project/createProject\";\r\nimport { deleteProject } from \"../actions/Project/deleteProject\";\r\n// constants\r\nimport { PROJECT_CREATE_RESET } from \"../constants/projectsContstants\";\r\n\r\nconst AdminProjectsList = () => {\r\n  const { pageNumber } = useParams() || 1;\r\n  const { keyword } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading: loadingProject,\r\n    projects,\r\n    pages,\r\n    page: projectPage,\r\n  } = useSelector((state) => state.getProjects);\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { loading: loadingDelete, success: successDelete } = useSelector(\r\n    (state) => state.projectDelete\r\n  );\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    project: createdProject,\r\n  } = useSelector((state) => state.projectCreate);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PROJECT_CREATE_RESET });\r\n    if (successCreate) {\r\n      navigate(`/admin/projectedit/${createdProject._id}`);\r\n    } else {\r\n      dispatch(listProjects(keyword, pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProject,\r\n    navigate,\r\n    pageNumber,\r\n    keyword,\r\n  ]);\r\n\r\n  const createProjectHandler = () => {\r\n    dispatch(createProject());\r\n  };\r\n\r\n  const deleteProjHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteProject(id));\r\n    }\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col>\r\n          <h1 style={{ color: \"white\" }}>Projects</h1>\r\n        </Col>\r\n        <Col style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            className=\"my-3\"\r\n            variant=\"success\"\r\n            onClick={createProjectHandler}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Create Project\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n\r\n      {loadingCreate && <Loader />}\r\n      {loadingProject ? (\r\n        <Loader />\r\n      ) : (\r\n        <Table\r\n          striped\r\n          bordered\r\n          responsive\r\n          hover\r\n          variant=\"dark\"\r\n          className=\"table-sm\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>NAME</th>\r\n              <th>GITHUB LINK</th>\r\n              <th>LANGUAGES/STACK</th>\r\n              <th>IMAGE PATH</th>\r\n              <th>Edit / Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {projects.map((project) => {\r\n              return (\r\n                <tr key={project._id}>\r\n                  <td>{project.name}</td>\r\n                  <td>{project.githubUrl}</td>\r\n                  <td>\r\n                    {project.languages.map((lang, indx) => {\r\n                      return (\r\n                        <p\r\n                          style={{\r\n                            display: \"inline\",\r\n                            color: \"white\",\r\n                          }}\r\n                          key={indx}\r\n                        >\r\n                          {lang},{\" \"}\r\n                        </p>\r\n                      );\r\n                    })}\r\n                  </td>\r\n                  <td>{project.photo}</td>\r\n                  <td>\r\n                    <Link to={`/admin/projectedit/${project._id}`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </Link>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteProjHandler(project._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <Row style={{ width: \"100%\", margin: \"2% 0\" }}>\r\n        {pages > 1 && (\r\n          <Pagination style={{ justifyContent: \"center\" }}>\r\n            {[...Array(pages).keys()].map((x) => (\r\n              <Pagination.Item\r\n                key={x + 1}\r\n                style={{ color: \"#012f41\" }}\r\n                href={`/admin/adminscreen/projects/${x + 1}`}\r\n                active={x + 1 === projectPage}\r\n              >\r\n                {x + 1}\r\n              </Pagination.Item>\r\n            ))}\r\n          </Pagination>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminProjectsList;\r\n","import axios from \"axios\";\r\nimport {\r\n  PROJECT_CREATE_FAIL,\r\n  PROJECT_CREATE_REQUEST,\r\n  PROJECT_CREATE_SUCCESS,\r\n} from \"../../constants/projectsContstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\n\r\nexport const createProject = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_CREATE_REQUEST,\r\n    });\r\n    const { data } = await axios.post(`/api/projects`, {\r\n      name: \"blank project\",\r\n      description: \"This is a blank project, pardon my dust as i clean up\",\r\n    });\r\n\r\n    dispatch({\r\n      type: PROJECT_CREATE_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n    dispatch(setAlert(`Project Created`, \"success\"));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: PROJECT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  Col,\r\n  Row,\r\n  Container,\r\n  Pagination,\r\n} from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n// components\r\nimport Loader from \"./Loader\";\r\n// actions/utilites\r\nimport { deleteBlog } from \"../actions/Blog/deleteBlog\";\r\nimport { listBlogs } from \"../actions/Blog/listBlogs\";\r\nimport formatDate from \"../utils/formatDate\";\r\n\r\n// constants\r\nimport { BLOG_CREATE_RESET } from \"../constants/blogConstants\";\r\n\r\nconst AdminBlogList = () => {\r\n  const { blogPageNumber } = useParams() || 1;\r\n  const { keyword } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    loading: loadingBlog,\r\n    blogs,\r\n    pages,\r\n    page,\r\n  } = useSelector((state) => state.listBlogs);\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { loading: loadingDelete, success: successDelete } = useSelector(\r\n    (state) => state.blogDelete\r\n  );\r\n\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    blog: createdBlog,\r\n  } = useSelector((state) => state.blogCreate);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: BLOG_CREATE_RESET });\r\n    if (successCreate) {\r\n      navigate(`/admin/blog-edit/${createdBlog._id}`);\r\n    } else {\r\n      dispatch(listBlogs(keyword, blogPageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdBlog,\r\n    navigate,\r\n    blogPageNumber,\r\n    keyword,\r\n  ]);\r\n\r\n  const createBlogHandler = () => {\r\n    navigate(\"/admin/blog\");\r\n  };\r\n\r\n  const deleteBlogHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      dispatch(deleteBlog(id));\r\n    }\r\n  };\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col>\r\n          <h1 style={{ color: \"white\" }}>Blogs</h1>\r\n        </Col>\r\n        <Col style={{ textAlign: \"right\" }}>\r\n          <Button\r\n            className=\"my-3\"\r\n            variant=\"success\"\r\n            onClick={createBlogHandler}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Create An Article\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {loadingCreate && <Loader />}\r\n      {loadingBlog ? (\r\n        <Loader />\r\n      ) : (\r\n        <Table\r\n          striped\r\n          bordered\r\n          responsive\r\n          hover\r\n          variant=\"dark\"\r\n          className=\"table-sm\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>TITLE</th>\r\n              <th>Date</th>\r\n              <th>Edit / Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {blogs.map((blog) => {\r\n              return (\r\n                <tr key={blog._id}>\r\n                  <td>{blog.blogTitle}</td>\r\n                  <td>{formatDate(blog.createdAt)}</td>\r\n                  <td>\r\n                    <Link to={`/admin/blog-edit/${blog._id}`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </Link>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteBlogHandler(blog._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n      <Row style={{ width: \"100%\", margin: \"2% 0\" }}>\r\n        {pages > 1 && (\r\n          <Pagination style={{ justifyContent: \"center\" }}>\r\n            {[...Array(pages).keys()].map((x) => (\r\n              <Pagination.Item\r\n                key={x + 1}\r\n                style={{ color: \"#012f41\" }}\r\n                href={`/admin/adminscreen/certificates/${x + 1}`}\r\n                active={x + 1 === page}\r\n              >\r\n                {x + 1}\r\n              </Pagination.Item>\r\n            ))}\r\n          </Pagination>\r\n        )}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminBlogList;\r\n","import axios from \"axios\";\r\nimport {\r\n  BLOG_DELETE_FAIL,\r\n  BLOG_DELETE_REQUEST,\r\n  BLOG_DELETE_SUCCESS,\r\n} from \"../../constants/blogConstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const deleteBlog = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOG_DELETE_REQUEST,\r\n    });\r\n    await axios.delete(`/api/blog/${id}`);\r\n\r\n    dispatch({\r\n      type: BLOG_DELETE_SUCCESS,\r\n    });\r\n    dispatch(setAlert(`Blog Deleted`, \"success\"));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: BLOG_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n// constants\r\nimport { PROJECT_CREATE_RESET } from \"../constants/projectsContstants\";\r\n\r\n// components\r\nimport AdminCertList from \"../components/AdminCertList\";\r\nimport AdminProjectsList from \"../components/adminProjectsList\";\r\nimport AdminBlogList from \"../components/AdminBlogList\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst AdminScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PROJECT_CREATE_RESET });\r\n    if (!userInfo) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`WD | Admin Panel`} />\r\n      <Container fluid className=\"admin-screen\">\r\n        <AdminProjectsList />\r\n        <AdminCertList />\r\n        <AdminBlogList />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminScreen;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport parse from \"html-react-parser\";\r\nimport {\r\n  Container,\r\n  Modal,\r\n  Button,\r\n  Form,\r\n  FloatingLabel,\r\n  Image,\r\n} from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\n\r\n// components\r\nimport Loader from \"../../components/Loader\";\r\n\r\n// actions\r\nimport { createBlog } from \"../../actions/Blog/createBlog\";\r\nimport Meta from \"../../components/Meta\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"../../actions/alert\";\r\n\r\nconst Blog = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { loading, blog } = useSelector((state) => state.blogDetails);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  // App State\r\n  const { loading: loadingUpdate, success: successCreate } = useSelector(\r\n    (state) => state.blogCreate\r\n  );\r\n\r\n  // component state\r\n  const [blogData, setBlogData] = useState({\r\n    blogTitle: \"\",\r\n    content: \"\",\r\n    isFeatured: false,\r\n    description: \"\",\r\n    blogImageUrl: \"\",\r\n  });\r\n  const [uploading, setUploading] = useState(false);\r\n  const editorRef = useRef(null);\r\n  // destructure state\r\n  // eslint-disable-next-line\r\n  const { blogTitle, content, isFeatured, description, blogImageUrl } =\r\n    blogData;\r\n  const [show, setShow] = useState(false);\r\n  // Helper Functions go here\r\n  // These functions handle the modal opening and closing.\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    if (editorRef.current) {\r\n      setBlogData({ ...blogData, content: editorRef.current.getContent() });\r\n      console.log(editorRef.current.getContent());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      navigate(\"/admin/adminscreen\");\r\n    }\r\n  }, [navigate, id, successCreate, dispatch, loading, blog, userInfo]);\r\n\r\n  // handles the creation of a new blog.\r\n  const handleCreate = () => {\r\n    setShow(false);\r\n    dispatch(\r\n      createBlog({\r\n        blogTitle,\r\n        description,\r\n        isFeatured,\r\n        blogImageUrl,\r\n        content: editorRef.current.getContent(),\r\n      })\r\n    );\r\n  };\r\n  const uploadFileHandler = async (e) => {\r\n    // files, is an array, since we have the ability to upload multiple\r\n    // files we only want the first file.\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    //Triggers the Loader component\r\n    setUploading(true);\r\n\r\n    //This makes the request to the backend\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          // Has to have the multipart/form-data!\r\n          // Also only Admins can upload a file, need token\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/uploads\", formData, config);\r\n\r\n      //Once the post request is finished, setImage to data, setUploading to false, to remove Loader\r\n      //Component\r\n      setBlogData({ ...blogData, blogImageUrl: data.data });\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setAlert(`Image uploading Failed`, \"danger\"));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`WD | New Blog Post`} />\r\n      <Container className=\"project-edit-container\" style={{ padding: \"5%\" }}>\r\n        {loadingUpdate && <Loader />}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <Form style={{ width: \"75%\", margin: \"5% auto\" }}>\r\n              <FormContainer>\r\n                <Container style={{ padding: \"5% 0\" }}>\r\n                  <h4 style={{ color: \"white\" }}>Blog Image</h4>\r\n                  <Image src={`${blogImageUrl}`} fluid />\r\n                </Container>\r\n                <Form.Group>\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Blog Title\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      value={blogTitle}\r\n                      name=\"title\"\r\n                      placeholder=\"Title\"\r\n                      onChange={(e) =>\r\n                        setBlogData({ ...blogData, blogTitle: e.target.value })\r\n                      }\r\n                      required\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"image\" className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={blogImageUrl}\r\n                    onChange={(e) =>\r\n                      setBlogData({ ...blogData, blogImageUrl: e.target.value })\r\n                    }\r\n                  />\r\n                  <Form.Control type=\"file\" onChange={uploadFileHandler} />\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"description\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Blog Summary\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      value={description}\r\n                      placeholder=\"Blog Summary\"\r\n                      style={{ height: \"100px\" }}\r\n                      onChange={(e) =>\r\n                        setBlogData({\r\n                          ...blogData,\r\n                          description: e.target.value,\r\n                        })\r\n                      }\r\n                      required\r\n                    ></Form.Control>\r\n                    <Form.Text id=\"descriptionHelpBlock\" muted>\r\n                      Please enter a good description of the blog, it must be\r\n                      less than 500 characters. {500 - description.length}/500\r\n                      characters remaining, This will be displayed on the Blogs\r\n                      page.\r\n                    </Form.Text>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Featured Article?\"\r\n                    value={isFeatured}\r\n                    onChange={(e) =>\r\n                      setBlogData({ ...blogData, isFeatured: e.target.value })\r\n                    }\r\n                    style={{ color: \"white\" }}\r\n                  />\r\n                  <Form.Text id=\"descriptionHelpBlock\" muted>\r\n                    Featured Articles, will display on the Home Page\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </FormContainer>\r\n              <Editor\r\n                onInit={(evt, editor) => (editorRef.current = editor)}\r\n                initialValue={blogData.content}\r\n                apiKey=\"dh9kclzz1mh67rg0cyvkmrqs6rso8b5aunovwvd57l9fz4qw\"\r\n                init={{\r\n                  height: 500,\r\n                  menubar: \"insert\",\r\n                  plugins: [\r\n                    \"advlist autolink lists link image charmap print preview anchor codesample\",\r\n                    \"searchreplace visualblocks code fullscreen\",\r\n                    \"insertdatetime media table paste code help wordcount autolink\",\r\n                  ],\r\n                  toolbar:\r\n                    \"undo redo | formatselect | image | codesample |\" +\r\n                    \"bold italic backcolor | alignleft aligncenter \" +\r\n                    \"alignright alignjustify | bullist numlist outdent indent | \" +\r\n                    \"removeformat | help\",\r\n                  content_style:\r\n                    \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\r\n                  codesample_languages: [\r\n                    { text: \"HTML/XML\", value: \"markup\" },\r\n                    { text: \"JavaScript\", value: \"javascript\" },\r\n                    { text: \"CSS\", value: \"css\" },\r\n                  ],\r\n                }}\r\n              />\r\n              <Container style={{ paddingTop: \"5%\", textAlign: \"center\" }}>\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                  See the article\r\n                </Button>\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{blogTitle}</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                      <h6>Description</h6>\r\n                      <p>{description}</p>\r\n                    </div>\r\n                    <div>\r\n                      {editorRef.current &&\r\n                        parse(editorRef.current.getContent())}\r\n                    </div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                      {isFeatured && (\r\n                        <code>\r\n                          This article will be featured on the home page!\r\n                        </code>\r\n                      )}\r\n                    </div>\r\n                  </Modal.Body>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Keep Editing\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    onClick={handleCreate}\r\n                    type=\"submit\"\r\n                  >\r\n                    Create Post\r\n                  </Button>\r\n                </Modal>\r\n              </Container>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import axios from \"axios\";\r\nimport {\r\n  BLOG_CREATE_FAIL,\r\n  BLOG_CREATE_REQUEST,\r\n  BLOG_CREATE_SUCCESS,\r\n} from \"../../constants/blogConstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const createBlog = (blog) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOG_CREATE_REQUEST,\r\n    });\r\n    const { data } = await axios.post(`/api/blog`, blog);\r\n\r\n    dispatch({\r\n      type: BLOG_CREATE_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n    dispatch(setAlert(`Blog ${blog.blogTitle} created!`, \"success\"));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: BLOG_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  BLOG_DETAILS_FAIL,\r\n  BLOG_DETAILS_REQUEST,\r\n  BLOG_DETAILS_SUCCESS,\r\n} from \"../../constants/blogConstants\";\r\nimport { setAlert } from \"../alert\";\r\nexport const listBlogDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: BLOG_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/blog/${id}`);\r\n    dispatch({\r\n      type: BLOG_DETAILS_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: BLOG_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n    dispatch(setAlert(message, \"danger\"));\r\n  }\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Image,\r\n  FloatingLabel,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport axios from \"axios\";\r\nimport parse from \"html-react-parser\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n// eslint-disable-next-line\r\n\r\n// actions\r\nimport { listBlogDetails } from \"../../actions/Blog/listBlogDetails\";\r\nimport { updateBlog } from \"../../actions/Blog/updateBlog\";\r\n// Components\r\nimport Loader from \"../../components/Loader\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\n// constants\r\nimport { BLOG_UPDATE_RESET } from \"../../constants/blogConstants\";\r\nimport Meta from \"../../components/Meta\";\r\nimport { setAlert } from \"../../actions/alert\";\r\n\r\nconst BlogEditScreen = () => {\r\n  // useful declartions\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  // Select from state the items we need\r\n  const { loading, blog } = useSelector((state) => state.blogDetails);\r\n  const { loading: loadingUpdate, success: successUpdate } = useSelector(\r\n    (state) => state.blogUpdate\r\n  );\r\n\r\n  // Component State\r\n  const [uploading, setUploading] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n  const [blogData, setBlogData] = useState({\r\n    _id: \"\",\r\n    blogTitle: \"\",\r\n    content: \"\",\r\n    isFeatured: false,\r\n    description: \"\",\r\n    blogImageUrl: \"\",\r\n  });\r\n  const editorRef = useRef(null);\r\n  // destructure state\r\n  // eslint-disable-next-line\r\n  const { blogTitle, content, isFeatured, description, blogImageUrl, _id } =\r\n    blogData;\r\n  // Helper Functions go here\r\n  // These functions handle the modal opening and closing.\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    if (editorRef.current) {\r\n      setBlogData({ ...blogData, content: editorRef.current.getContent() });\r\n      console.log(editorRef.current.getContent());\r\n    }\r\n  };\r\n  // handles the creation of a new blog.\r\n  const handleCreate = () => {\r\n    setShow(false);\r\n    dispatch(\r\n      updateBlog({\r\n        _id,\r\n        blogTitle,\r\n        isFeatured,\r\n        description,\r\n        blogImageUrl,\r\n        content: editorRef.current.getContent(),\r\n      })\r\n    );\r\n  };\r\n\r\n  // UseEffect Block should only need to run once, we just want to do two things\r\n  // If a blog is updated, go back to blogs, else, take from state\r\n  // the blog and render the content\r\n  useEffect(() => {\r\n    // On a successful update, navigate back to the blogs page.\r\n    if (successUpdate) {\r\n      dispatch({ type: BLOG_UPDATE_RESET });\r\n      navigate(\"/admin/adminscreen\");\r\n    } else {\r\n      // if there isnt a blogTitle or id, dispatch to get from state that blog\r\n      if (!blog.blogTitle || blog._id !== id) {\r\n        dispatch(listBlogDetails(id));\r\n      } else {\r\n        // Set the state of the editor.\r\n        setBlogData(blog);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, navigate, successUpdate, blogTitle, blog]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    // files, is an array, since we have the ability to upload multiple\r\n    // files we only want the first file.\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    //Triggers the Loader component\r\n    setUploading(true);\r\n\r\n    //This makes the request to the backend\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          // Has to have the multipart/form-data!\r\n          // Also only Admins can upload a file, need token\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/uploads\", formData, config);\r\n\r\n      //Once the post request is finished, setImage to data, setUploading to false, to remove Loader\r\n      //Component\r\n      setBlogData({ ...blogData, blogImageUrl: data.data });\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(setAlert(`Image uploading Failed`, \"danger\"));\r\n      setUploading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Meta title={`Edit Blog: ${blog.blogTitle}`} />\r\n      <Container className=\"project-edit-container\" style={{ padding: \"5%\" }}>\r\n        {loadingUpdate && <Loader />}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <Form style={{ width: \"75%\", margin: \"5% auto\" }}>\r\n              <FormContainer>\r\n                <Container style={{ padding: \"5% 0\" }}>\r\n                  <h4 style={{ color: \"white\" }}>Blog Image</h4>\r\n                  <Image src={`${blogImageUrl}`} fluid />\r\n                </Container>\r\n                <Form.Group>\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Blog Title\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      value={blogTitle}\r\n                      name=\"title\"\r\n                      placeholder=\"Title\"\r\n                      onChange={(e) =>\r\n                        setBlogData({ ...blogData, blogTitle: e.target.value })\r\n                      }\r\n                      required\r\n                    />\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"image\" className=\"mb-3\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={blogImageUrl}\r\n                    onChange={(e) =>\r\n                      setBlogData({ ...blogData, blogImageUrl: e.target.value })\r\n                    }\r\n                  />\r\n                  <Form.Control type=\"file\" onChange={uploadFileHandler} />\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"description\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Blog Summary\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      value={description}\r\n                      placeholder=\"Blog Summary\"\r\n                      style={{ height: \"100px\" }}\r\n                      onChange={(e) =>\r\n                        setBlogData({\r\n                          ...blogData,\r\n                          description: e.target.value,\r\n                        })\r\n                      }\r\n                      required\r\n                    ></Form.Control>\r\n                    <Form.Text id=\"descriptionHelpBlock\" muted>\r\n                      Please enter a good description of the blog, it must be\r\n                      less than 500 characters. {500 - description.length}/500\r\n                      characters remaining, This will be displayed on the Blogs\r\n                      page.\r\n                    </Form.Text>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Featured Article?\"\r\n                    value={isFeatured}\r\n                    onChange={(e) =>\r\n                      setBlogData({ ...blogData, isFeatured: !isFeatured })\r\n                    }\r\n                    style={{ color: \"white\" }}\r\n                  />\r\n                  <Form.Text id=\"descriptionHelpBlock\" muted>\r\n                    Featured Articles, will display on the Home Page\r\n                  </Form.Text>\r\n                </Form.Group>\r\n              </FormContainer>\r\n              <Editor\r\n                onInit={(evt, editor) => (editorRef.current = editor)}\r\n                initialValue={parse(blogData.content)}\r\n                apiKey=\"dh9kclzz1mh67rg0cyvkmrqs6rso8b5aunovwvd57l9fz4qw\"\r\n                init={{\r\n                  height: 500,\r\n                  menubar: \"insert\",\r\n                  plugins: [\r\n                    \"advlist autolink lists link image charmap print preview anchor codesample\",\r\n                    \"searchreplace visualblocks code fullscreen\",\r\n                    \"insertdatetime media table paste code help wordcount autolink\",\r\n                  ],\r\n                  toolbar:\r\n                    \"undo redo | formatselect | image | codesample |\" +\r\n                    \"bold italic backcolor | alignleft aligncenter \" +\r\n                    \"alignright alignjustify | bullist numlist outdent indent | \" +\r\n                    \"removeformat | help\",\r\n                  content_style:\r\n                    \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\r\n                  codesample_languages: [\r\n                    { text: \"HTML/XML\", value: \"markup\" },\r\n                    { text: \"JavaScript\", value: \"javascript\" },\r\n                    { text: \"CSS\", value: \"css\" },\r\n                  ],\r\n                }}\r\n              />\r\n              <Container\r\n                style={{ paddingTop: \"5%\", textAlign: \"center\" }}\r\n                fluid\r\n              >\r\n                <Button variant=\"primary\" onClick={handleShow}>\r\n                  See the article\r\n                </Button>\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                  <Modal.Header closeButton>\r\n                    <Modal.Title>{blogTitle}</Modal.Title>\r\n                  </Modal.Header>\r\n                  <Modal.Body>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                      <h6>Description</h6>\r\n                      <p>{description}</p>\r\n                    </div>\r\n                    <div className=\"article-content-container\">\r\n                      {editorRef.current &&\r\n                        parse(editorRef.current.getContent())}\r\n                    </div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                      {isFeatured && (\r\n                        <code>\r\n                          This article will be featured on the home page!\r\n                        </code>\r\n                      )}\r\n                    </div>\r\n                  </Modal.Body>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Keep Editing\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    onClick={handleCreate}\r\n                    type=\"submit\"\r\n                  >\r\n                    Update Blog\r\n                  </Button>\r\n                </Modal>\r\n              </Container>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogEditScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  BLOG_DETAILS_SUCCESS,\r\n  BLOG_UPDATE_FAIL,\r\n  BLOG_UPDATE_REQUEST,\r\n  BLOG_UPDATE_SUCCESS,\r\n} from \"../../constants/blogConstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const updateBlog = (blog) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOG_UPDATE_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.put(`/api/blog/${blog._id}`, blog);\r\n    dispatch({\r\n      type: BLOG_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch(setAlert(`Blog ${blog.blogTitle}, Updated!`, \"success\"));\r\n    dispatch({ type: BLOG_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: BLOG_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","export default function appendLeadingZeroes(n) {\r\n  if (n <= 9) {\r\n    return \"0\" + n;\r\n  }\r\n  return n;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, FloatingLabel, Form, Button, Image } from \"react-bootstrap\";\r\nimport FormContainer from \"../../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n// actions\r\nimport { listCertificateDetails } from \"../../actions/Certificate/listCertificateDetails\";\r\nimport { updateCertificate } from \"../../actions/Certificate/updateCertificate\";\r\n// Components\r\nimport Loader from \"../../components/Loader\";\r\n\r\n// constants\r\nimport { CERTIFICATE_UPDATE_RESET } from \"../../constants/certConstants\";\r\nimport appendLeadingZeroes from \"../../utils/appendLeadingZeroes\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport Meta from \"../../components/Meta\";\r\nconst CertificateEditScreen = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams() || 1;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [certificateImageUrl, setCertificateImageUrl] = useState(\"\");\r\n  const [issuingAuthority, setIssuingAuthority] = useState(\"\");\r\n  const [dateOfCompletion, setDateOfCompletion] = useState(Date);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, certificate } = useSelector((state) => state.certDetails);\r\n\r\n  const { loading: loadingUpdate, success: successUpdate } = useSelector(\r\n    (state) => state.certUpdate\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: CERTIFICATE_UPDATE_RESET });\r\n      navigate(\"/certificates\");\r\n    } else {\r\n      if (!certificate.name || certificate._id !== id) {\r\n        dispatch(listCertificateDetails(id));\r\n      } else {\r\n        setName(certificate.name);\r\n        setCertificateImageUrl(certificate.certificateImageUrl);\r\n        let date = new Date(certificate.dateOfCompletion);\r\n        let formatted_date = `${date.getFullYear()}-${appendLeadingZeroes(\r\n          date.getMonth() + 1\r\n        )}-${appendLeadingZeroes(date.getDate() + 1)}`;\r\n        setDateOfCompletion(formatted_date);\r\n        setIssuingAuthority(certificate.issuingAuthority);\r\n      }\r\n    }\r\n  }, [navigate, id, successUpdate, dispatch, loading, certificate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    // files, is an array, since we have the ability to upload multiple\r\n    // files we only want the first file.\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    //Triggers the Loader component\r\n    setUploading(true);\r\n\r\n    //This makes the request to the backend\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          // Has to have the multipart/form-data!\r\n          // Also only Admins can upload a file, need token\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/uploads\", formData, config);\r\n\r\n      //Once the post request is finished, setImage to data, setUploading to false, to remove Loader\r\n      //Component\r\n      setCertificateImageUrl(data.data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      dispatch(setAlert(error.message, \"danger\"));\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateCertificate({\r\n        _id: id,\r\n        name,\r\n        certificateImageUrl,\r\n        issuingAuthority,\r\n        dateOfCompletion,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Meta title={`WD | Cert Edit: ${certificate.name}`} />\r\n      <Container className=\"project-edit-container\">\r\n        <Container>\r\n          {loadingUpdate && <Loader />}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <FormContainer>\r\n              <h1 style={{ color: \"white\" }}>Edit Certificate</h1>\r\n              <Container style={{ padding: \"5%\" }}>\r\n                <h4 style={{ color: \"white\" }}>Certificate Image</h4>\r\n                <Image src={`${certificateImageUrl}`} fluid />\r\n              </Container>\r\n              <Form onSubmit={submitHandler} style={{ color: \"black\" }}>\r\n                <Form.Group controlId=\"name\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Project name\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"name\"\r\n                      value={name}\r\n                      placeholder=\"Project Name\"\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"issuingAuthority\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Name of institution of Authority\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={issuingAuthority}\r\n                      placeholder=\"Name of institution of Authority\"\r\n                      onChange={(e) => setIssuingAuthority(e.target.value)}\r\n                    ></Form.Control>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"certificateImageUrl\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Image path\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={certificateImageUrl}\r\n                      placeholder=\"Live Project Location\"\r\n                      onChange={(e) => setCertificateImageUrl(e.target.value)}\r\n                    ></Form.Control>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"image\" className=\"mb-3\">\r\n                  <Form.Control type=\"text\" value={certificateImageUrl} />\r\n                  <Form.Control type=\"file\" onChange={uploadFileHandler} />\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"dateOfCompletion\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Date of Completion\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"date\"\r\n                      placeholder=\"\"\r\n                      value={dateOfCompletion}\r\n                      onChange={(e) => setDateOfCompletion(e.target.value)}\r\n                    ></Form.Control>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"dark\" style={{ width: \"100%\" }}>\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            </FormContainer>\r\n          )}\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CertificateEditScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  CERTIFICATE_DETAILS_FAIL,\r\n  CERTIFICATE_DETAILS_REQUEST,\r\n  CERTIFICATE_DETAILS_SUCCESS,\r\n} from \"../../constants/certConstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const listCertificateDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CERTIFICATE_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/certs/${id}`);\r\n    dispatch({\r\n      type: CERTIFICATE_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: CERTIFICATE_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n    dispatch(setAlert(message, \"danger\"));\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  CERTIFICATE_DETAILS_SUCCESS,\r\n  CERTIFICATE_UPDATE_FAIL,\r\n  CERTIFICATE_UPDATE_REQUEST,\r\n  CERTIFICATE_UPDATE_SUCCESS,\r\n} from \"../../constants/certConstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const updateCertificate = (certificate) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CERTIFICATE_UPDATE_REQUEST,\r\n    });\r\n    const { data } = await axios.put(\r\n      `/api/certs/${certificate._id}`,\r\n      certificate\r\n    );\r\n\r\n    dispatch({\r\n      type: CERTIFICATE_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: CERTIFICATE_DETAILS_SUCCESS, payload: data });\r\n    dispatch(\r\n      setAlert(`Certificate ${certificate.name}, has been updated`, \"success\")\r\n    );\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: CERTIFICATE_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Form, Button, FloatingLabel, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { PROJECT_UPDATE_RESET } from \"../constants/projectsContstants\";\r\nimport { listProjectDetails } from \"../actions/Project/listProjectDetails\";\r\nimport { updateProject } from \"../actions/Project/updateProject\";\r\nimport axios from \"axios\";\r\n// import FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Meta from \"../components/Meta\";\r\n\r\nconst ProjectEditScreen = ({ match }) => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [githubUrl, setGithubUrl] = useState(\"\");\r\n  const [liveProjectURL, setLiveProjectURL] = useState(\"\");\r\n  const [languages, setLanguages] = useState([]);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, project } = useSelector((state) => state.projectDetails);\r\n\r\n  const { loading: loadingUpdate, success: successUpdate } = useSelector(\r\n    (state) => state.projectUpdate\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PROJECT_UPDATE_RESET });\r\n      navigate(\"/projects\");\r\n    } else {\r\n      if (!project.name || project._id !== id) {\r\n        dispatch(listProjectDetails(id));\r\n      } else {\r\n        setName(project.name);\r\n        setPhoto(project.photo);\r\n        setGithubUrl(project.githubUrl);\r\n        setLiveProjectURL(project.liveProjectURL);\r\n        setLanguages(project.languages);\r\n        setDescription(project.description);\r\n      }\r\n    }\r\n  }, [navigate, id, successUpdate, dispatch, loading, project]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    // files, is an array, since we have the ability to upload multiple\r\n    // files we only want the first file.\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    //Triggers the Loader component\r\n    setUploading(true);\r\n\r\n    //This makes the request to the backend\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          // Has to have the multipart/form-data!\r\n          // Also only Admins can upload a file, need token\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/uploads\", formData, config);\r\n\r\n      //Once the post request is finished, setImage to data, setUploading to false, to remove Loader\r\n      //Component\r\n      setPhoto(data.data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProject({\r\n        _id: id,\r\n        name,\r\n        photo,\r\n        githubUrl,\r\n        liveProjectURL,\r\n        languages,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Meta title={`WD | Edit Project: ${project.name}`} />\r\n      <Container className=\"project-edit-container\">\r\n        <Container>\r\n          {loadingUpdate && <Loader />}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <FormContainer>\r\n              <h1 style={{ color: \"white\" }}>Edit Project</h1>\r\n              <Container style={{ padding: \"5%\" }}>\r\n                <h4 style={{ color: \"white\" }}>Project Image</h4>\r\n                <Image src={`${photo}`} fluid />\r\n              </Container>\r\n              <Form onSubmit={submitHandler} style={{ color: \"black\" }}>\r\n                <Form.Group controlId=\"name\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Project name\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"name\"\r\n                      value={name}\r\n                      placeholder=\"Project Name\"\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"githubUrl\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Github URL\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={githubUrl}\r\n                      placeholder=\"Github URL\"\r\n                      onChange={(e) => setGithubUrl(e.target.value)}\r\n                    ></Form.Control>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"liveProjectURL\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Live Project Location\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      value={liveProjectURL}\r\n                      placeholder=\"Live Project Location\"\r\n                      onChange={(e) => setLiveProjectURL(e.target.value)}\r\n                    ></Form.Control>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"image\" className=\"mb-3\">\r\n                  <Form.Control type=\"text\" value={photo} />\r\n                  <Form.Control type=\"file\" onChange={uploadFileHandler} />\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"languages\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"What Langauges/Stack did you use?\"\r\n                  >\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"What Langauges/Stack did you use?\"\r\n                      value={languages}\r\n                      onChange={(e) => setLanguages(e.target.value.split(\",\"))}\r\n                    ></Form.Control>\r\n                    <Form.Text id=\"languagesHelpBlock\" muted>\r\n                      Enter the values as comma (,) seperated values\r\n                    </Form.Text>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"description\">\r\n                  <FloatingLabel\r\n                    controlId=\"floatingInput\"\r\n                    label=\"Project Description\"\r\n                    className=\"mb-3\"\r\n                  >\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      value={description}\r\n                      placeholder=\"Project Name\"\r\n                      style={{ height: \"100px\" }}\r\n                      onChange={(e) => setDescription(e.target.value)}\r\n                    ></Form.Control>\r\n                    <Form.Text id=\"descriptionHelpBlock\" muted>\r\n                      Please enter a good description of the project, it must be\r\n                      less than 500 characters. {500 - description.length}/500\r\n                      characters remaining\r\n                    </Form.Text>\r\n                  </FloatingLabel>\r\n                </Form.Group>\r\n                <Button type=\"submit\" variant=\"dark\" style={{ width: \"100%\" }}>\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            </FormContainer>\r\n          )}\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectEditScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  PROJECT_DETAILS_FAIL,\r\n  PROJECT_DETAILS_REQUEST,\r\n  PROJECT_DETAILS_SUCCESS,\r\n} from \"../../constants/projectsContstants\";\r\nimport { setAlert } from \"../alert\";\r\n\r\nexport const listProjectDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PROJECT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/projects/${id}`);\r\n\r\n    dispatch({\r\n      type: PROJECT_DETAILS_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: PROJECT_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  PROJECT_DETAILS_SUCCESS,\r\n  PROJECT_UPDATE_FAIL,\r\n  PROJECT_UPDATE_REQUEST,\r\n  PROJECT_UPDATE_SUCCESS,\r\n} from \"../../constants/projectsContstants\";\r\nimport { setAlert } from \"../alert\";\r\nimport { logout } from \"../Auth/logout\";\r\nexport const updateProject = (project) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PROJECT_UPDATE_REQUEST,\r\n    });\r\n    const { data } = await axios.put(`/api/projects/${project._id}`, project);\r\n\r\n    dispatch({\r\n      type: PROJECT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PROJECT_DETAILS_SUCCESS, payload: data });\r\n    dispatch(setAlert(`Project Updated`, \"success\"));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch(setAlert(message, \"danger\"));\r\n    dispatch({\r\n      type: PROJECT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  return !userInfo ? <Navigate to=\"/login\" /> : children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport AdminScreen from \"../../screens/AdminScreen\";\r\nimport Blog from \"../../screens/Blog/Blog\";\r\nimport BlogEditScreen from \"../../screens/Blog/BlogEditScreen\";\r\nimport CertificateEditScreen from \"../../screens/Certificate/CertificateEditScreen\";\r\nimport ProjectEditScreen from \"../../screens/ProjectEditScreen\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\n\r\nconst AdminRoutes = () => {\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        path=\"/blog\"\r\n        element={\r\n          <PrivateRoute>\r\n            <Blog />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/blog-edit/:id\"\r\n        element={\r\n          <PrivateRoute>\r\n            <BlogEditScreen />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/projectedit/:id\"\r\n        element={\r\n          <PrivateRoute>\r\n            <ProjectEditScreen />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/certificate-edit/:id\"\r\n        element={\r\n          <PrivateRoute>\r\n            <CertificateEditScreen />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/adminscreen\"\r\n        element={\r\n          <PrivateRoute>\r\n            <AdminScreen />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/adminscreen/projects/:pageNumber\"\r\n        element={\r\n          <PrivateRoute>\r\n            <AdminScreen />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/adminscreen/certificates/:certPageNumber\"\r\n        element={\r\n          <PrivateRoute>\r\n            <AdminScreen />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/adminscreen/blogs/:blogPageNumber\"\r\n        element={\r\n          <PrivateRoute>\r\n            <AdminScreen />\r\n          </PrivateRoute>\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default AdminRoutes;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Alert = () => {\r\n  // App State\r\n  const alert = useSelector((state) => state.alert);\r\n  return (\r\n    <div className=\"alert-wrapper\">\r\n      {alert.map((alert) => (\r\n        <div\r\n          key={alert.id}\r\n          className={`alert alert-${alert.alertType}`}\r\n          style={{ fontFamily: \"sans-serif\" }}\r\n        >\r\n          {alert.message}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useEffect } from \"react\";\r\nimport { Container, Image } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { listBlogDetails } from \"../../actions/Blog/listBlogDetails\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst Article = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const { loading, blog } = useSelector((state) => state.blogDetails);\r\n  useEffect(() => {\r\n    if (blog._id !== id) {\r\n      dispatch(listBlogDetails(id));\r\n    }\r\n  }, [blog, dispatch]);\r\n\r\n  return (\r\n    <Container className=\"article-container\">\r\n      <div className=\"banner-container\">\r\n        <Image\r\n          src={blog.blogImageUrl}\r\n          alt=\"featured image banner\"\r\n          fluid\r\n          className=\"banner\"\r\n        />\r\n      </div>\r\n      <div className=\"article-content-container\">\r\n        {blog && parse(`${parse(`${blog.content}`)}`)}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\n// Screen imports\r\nimport Home from \"./screens/Home\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport About from \"./screens/About\";\r\nimport Projects from \"./screens/Projects\";\r\nimport Certificates from \"./screens/Certificate/Certificates\";\r\nimport Blogs from \"./screens/Blog/Blogs\";\r\nimport Reset from \"./screens/Reset\";\r\nimport ResetPassword from \"./screens/ResetPassword\";\r\n\r\n// actions/utilities\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { useSelector } from \"react-redux\";\r\n// Components\r\nimport Header from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\n// css styles\r\nimport \"./App.css\";\r\nimport AdminRoutes from \"./components/Routes/AdminRoutes\";\r\nimport Alert from \"./components/Alert\";\r\nimport Article from \"./screens/Blog/Article\";\r\n\r\nconst App = () => {\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  if (userInfo) {\r\n    setAuthToken(userInfo.token);\r\n  }\r\n  return (\r\n    <Router>\r\n      <Alert />\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/list-blogs\" element={<Blogs />} />\r\n        <Route path=\"/blog/article/:id\" element={<Article />} />\r\n        {/* Admin Routes and Admin Screen */}\r\n        <Route path=\"/admin/*\" element={<AdminRoutes />} />\r\n        <Route path=\"/login\" element={<LoginScreen />} />\r\n        <Route path=\"/projects\" element={<Projects />} />\r\n        <Route path=\"/certificates\" element={<Certificates />} />\r\n        <Route\r\n          path=\"/certificates/page/:pageNumber\"\r\n          element={<Certificates />}\r\n        />\r\n        <Route path=\"/projects/page/:pageNumber\" element={<Projects />} exact />\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route path=\"/resetpassword\" element={<Reset />} />\r\n        <Route\r\n          path=\"/auth/resetpassword/:resettoken\"\r\n          element={<ResetPassword />}\r\n        />\r\n        <Route path=\"/\" element={<Home />} />\r\n      </Routes>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { userLoginReducer } from \"./userReducer\";\r\nimport {\r\n  projectListReducer,\r\n  projectCreateReducer,\r\n  projectDeleteReducer,\r\n  projectUpdateReducer,\r\n  projectDetailsReducer,\r\n} from \"./projectsReducer\";\r\n\r\nimport {\r\n  certificateCreateReducer,\r\n  certificateListReducer,\r\n  certificateDeleteReducer,\r\n  certificateUpdateReducer,\r\n  certificateDetailsReducer,\r\n} from \"./certReducer\";\r\n\r\nimport {\r\n  blogCreateReducer,\r\n  blogDeleteReducer,\r\n  blogDetailsReducer,\r\n  blogListReducer,\r\n  blogUpdateReducer,\r\n} from \"./blogReducer\";\r\n// reducers\r\nimport { alert } from \"./alertReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  // Reducer for Alert\r\n  alert: alert,\r\n  userLogin: userLoginReducer,\r\n  // Project Reducers\r\n  getProjects: projectListReducer,\r\n  projectUpdate: projectUpdateReducer,\r\n  projectDelete: projectDeleteReducer,\r\n  projectCreate: projectCreateReducer,\r\n  projectDetails: projectDetailsReducer,\r\n  // Certificate reducers\r\n  listCerts: certificateListReducer,\r\n  certUpdate: certificateUpdateReducer,\r\n  certDelete: certificateDeleteReducer,\r\n  certCreate: certificateCreateReducer,\r\n  certDetails: certificateDetailsReducer,\r\n  // Blog Reducers\r\n  listBlogs: blogListReducer,\r\n  blogUpdate: blogUpdateReducer,\r\n  blogDelete: blogDeleteReducer,\r\n  blogCreate: blogCreateReducer,\r\n  blogDetails: blogDetailsReducer,\r\n});\r\n","import { REMOVE_ALERT, SET_ALERT } from \"../constants/alertConstants\";\r\n\r\nexport const alert = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PROJECT_CREATE_FAIL,\r\n  PROJECT_CREATE_REQUEST,\r\n  PROJECT_CREATE_RESET,\r\n  PROJECT_CREATE_SUCCESS,\r\n  PROJECT_DELETE_FAIL,\r\n  PROJECT_DELETE_REQUEST,\r\n  PROJECT_DELETE_SUCCESS,\r\n  PROJECT_DETAILS_FAIL,\r\n  PROJECT_DETAILS_REQUEST,\r\n  PROJECT_DETAILS_SUCCESS,\r\n  PROJECT_LIST_FAIL,\r\n  PROJECT_LIST_REQUEST,\r\n  PROJECT_LIST_SUCCESS,\r\n  PROJECT_UPDATE_FAIL,\r\n  PROJECT_UPDATE_REQUEST,\r\n  PROJECT_UPDATE_RESET,\r\n  PROJECT_UPDATE_SUCCESS,\r\n} from \"../constants/projectsContstants\";\r\n\r\nexport const projectListReducer = (state = { projects: [] }, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_LIST_REQUEST:\r\n      return { loading: true, projects: [] };\r\n    case PROJECT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        projects: action.payload.projects,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case PROJECT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const projectDetailsReducer = (state = { project: {} }, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PROJECT_DETAILS_SUCCESS:\r\n      return { loading: false, project: action.payload };\r\n    case PROJECT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PROJECT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PROJECT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PROJECT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, project: action.payload };\r\n    case PROJECT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PROJECT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const projectUpdateReducer = (state = { project: {} }, action) => {\r\n  switch (action.type) {\r\n    case PROJECT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PROJECT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, project: action.payload };\r\n    case PROJECT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PROJECT_UPDATE_RESET:\r\n      return { project: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CERTIFICATE_CREATE_FAIL,\r\n  CERTIFICATE_CREATE_REQUEST,\r\n  CERTIFICATE_CREATE_RESET,\r\n  CERTIFICATE_CREATE_SUCCESS,\r\n  CERTIFICATE_DELETE_FAIL,\r\n  CERTIFICATE_DELETE_REQUEST,\r\n  CERTIFICATE_DELETE_SUCCESS,\r\n  CERTIFICATE_DETAILS_FAIL,\r\n  CERTIFICATE_DETAILS_REQUEST,\r\n  CERTIFICATE_DETAILS_SUCCESS,\r\n  CERTIFICATE_LIST_FAIL,\r\n  CERTIFICATE_LIST_REQUEST,\r\n  CERTIFICATE_LIST_SUCCESS,\r\n  CERTIFICATE_UPDATE_FAIL,\r\n  CERTIFICATE_UPDATE_REQUEST,\r\n  CERTIFICATE_UPDATE_RESET,\r\n  CERTIFICATE_UPDATE_SUCCESS,\r\n} from \"../constants/certConstants\";\r\n\r\nexport const certificateListReducer = (\r\n  state = { certificates: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CERTIFICATE_LIST_REQUEST:\r\n      return { loading: true, certificates: [] };\r\n    case CERTIFICATE_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        certificates: action.payload.certificates,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case CERTIFICATE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const certificateDetailsReducer = (\r\n  state = { certificate: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CERTIFICATE_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case CERTIFICATE_DETAILS_SUCCESS:\r\n      return { loading: false, certificate: action.payload };\r\n    case CERTIFICATE_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const certificateDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CERTIFICATE_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case CERTIFICATE_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CERTIFICATE_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const certificateCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CERTIFICATE_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case CERTIFICATE_CREATE_SUCCESS:\r\n      return { loading: false, success: true, certificate: action.payload };\r\n    case CERTIFICATE_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CERTIFICATE_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const certificateUpdateReducer = (\r\n  state = { certificate: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CERTIFICATE_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case CERTIFICATE_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, certificate: action.payload };\r\n    case CERTIFICATE_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CERTIFICATE_UPDATE_RESET:\r\n      return { certificate: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  BLOG_CREATE_FAIL,\r\n  BLOG_CREATE_REQUEST,\r\n  BLOG_CREATE_RESET,\r\n  BLOG_CREATE_SUCCESS,\r\n  BLOG_DELETE_FAIL,\r\n  BLOG_DELETE_REQUEST,\r\n  BLOG_DELETE_SUCCESS,\r\n  BLOG_DETAILS_FAIL,\r\n  BLOG_DETAILS_REQUEST,\r\n  BLOG_DETAILS_SUCCESS,\r\n  BLOG_LIST_FAIL,\r\n  BLOG_LIST_REQUEST,\r\n  BLOG_LIST_SUCCESS,\r\n  BLOG_UPDATE_FAIL,\r\n  BLOG_UPDATE_REQUEST,\r\n  BLOG_UPDATE_RESET,\r\n  BLOG_UPDATE_SUCCESS,\r\n} from \"../constants/blogConstants\";\r\n\r\nexport const blogListReducer = (state = { blogs: [] }, action) => {\r\n  switch (action.type) {\r\n    case BLOG_LIST_REQUEST:\r\n      return { loading: true, blogs: [] };\r\n    case BLOG_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        blogs: action.payload.blogs,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case BLOG_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const blogDetailsReducer = (state = { blog: {} }, action) => {\r\n  switch (action.type) {\r\n    case BLOG_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case BLOG_DETAILS_SUCCESS:\r\n      return { loading: false, blog: action.payload };\r\n    case BLOG_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const blogDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case BLOG_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case BLOG_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case BLOG_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const blogCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case BLOG_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case BLOG_CREATE_SUCCESS:\r\n      return { loading: false, success: true, blog: action.payload };\r\n    case BLOG_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case BLOG_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const blogUpdateReducer = (state = { blog: {} }, action) => {\r\n  switch (action.type) {\r\n    case BLOG_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case BLOG_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, blog: action.payload };\r\n    case BLOG_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case BLOG_UPDATE_RESET:\r\n      return { blog: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers/rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// import reducers\r\n\r\nconst middleware = [thunk];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nlet store;\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  )\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  )\r\n}\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}